/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
	/******/
	return __webpack_require__( __webpack_require__.s = 118 );
/******/ })
/************************************************************************/
/******/ ({

/***/ 1:
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

	/***/ 11:
/***/ (function(module, exports, __webpack_require__) {

		eval( "/* WEBPACK VAR INJECTION */(function(process, setImmediate) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! hellojs v1.16.1 | (c) 2012-2017 Andrew Dodson | MIT https://adodson.com/hello.js/LICENSE */\n// ES5 Object.create\nif (!Object.create) {\n\n\t// Shim, Object create\n\t// A shim for Object.create(), it adds a prototype to a new object\n\tObject.create = (function() {\n\n\t\tfunction F() {}\n\n\t\treturn function(o) {\n\n\t\t\tif (arguments.length != 1) {\n\t\t\t\tthrow new Error('Object.create implementation only accepts one parameter.');\n\t\t\t}\n\n\t\t\tF.prototype = o;\n\t\t\treturn new F();\n\t\t};\n\n\t})();\n\n}\n\n// ES5 Object.keys\nif (!Object.keys) {\n\tObject.keys = function(o, k, r) {\n\t\tr = [];\n\t\tfor (k in o) {\n\t\t\tif (r.hasOwnProperty.call(o, k))\n\t\t\t\tr.push(k);\n\t\t}\n\n\t\treturn r;\n\t};\n}\n\n// ES5 [].indexOf\nif (!Array.prototype.indexOf) {\n\tArray.prototype.indexOf = function(s) {\n\n\t\tfor (var j = 0; j < this.length; j++) {\n\t\t\tif (this[j] === s) {\n\t\t\t\treturn j;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\n// ES5 [].forEach\nif (!Array.prototype.forEach) {\n\tArray.prototype.forEach = function(fun/*, thisArg*/) {\n\n\t\tif (this === void 0 || this === null) {\n\t\t\tthrow new TypeError();\n\t\t}\n\n\t\tvar t = Object(this);\n\t\tvar len = t.length >>> 0;\n\t\tif (typeof fun !== 'function') {\n\t\t\tthrow new TypeError();\n\t\t}\n\n\t\tvar thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (i in t) {\n\t\t\t\tfun.call(thisArg, t[i], i, t);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n}\n\n// ES5 [].filter\nif (!Array.prototype.filter) {\n\tArray.prototype.filter = function(fun, thisArg) {\n\n\t\tvar a = [];\n\t\tthis.forEach(function(val, i, t) {\n\t\t\tif (fun.call(thisArg || void 0, val, i, t)) {\n\t\t\t\ta.push(val);\n\t\t\t}\n\t\t});\n\n\t\treturn a;\n\t};\n}\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.19\n// Reference: http://es5.github.io/#x15.4.4.19\nif (!Array.prototype.map) {\n\n\tArray.prototype.map = function(fun, thisArg) {\n\n\t\tvar a = [];\n\t\tthis.forEach(function(val, i, t) {\n\t\t\ta.push(fun.call(thisArg || void 0, val, i, t));\n\t\t});\n\n\t\treturn a;\n\t};\n}\n\n// ES5 isArray\nif (!Array.isArray) {\n\n\t// Function Array.isArray\n\tArray.isArray = function(o) {\n\t\treturn Object.prototype.toString.call(o) === '[object Array]';\n\t};\n\n}\n\n// Test for location.assign\nif (typeof window === 'object' && typeof window.location === 'object' && !window.location.assign) {\n\n\twindow.location.assign = function(url) {\n\t\twindow.location = url;\n\t};\n\n}\n\n// Test for Function.bind\nif (!Function.prototype.bind) {\n\n\t// MDN\n\t// Polyfill IE8, does not support native Function.bind\n\tFunction.prototype.bind = function(b) {\n\n\t\tif (typeof this !== 'function') {\n\t\t\tthrow new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n\t\t}\n\n\t\tfunction C() {}\n\n\t\tvar a = [].slice;\n\t\tvar f = a.call(arguments, 1);\n\t\tvar _this = this;\n\t\tvar D = function() {\n\t\t\treturn _this.apply(this instanceof C ? this : b || window, f.concat(a.call(arguments)));\n\t\t};\n\n\t\tC.prototype = this.prototype;\n\t\tD.prototype = new C();\n\n\t\treturn D;\n\t};\n\n}\n\n/**\n * @hello.js\n *\n * HelloJS is a client side Javascript SDK for making OAuth2 logins and subsequent REST calls.\n *\n * @author Andrew Dodson\n * @website https://adodson.com/hello.js/\n *\n * @copyright Andrew Dodson, 2012 - 2015\n * @license MIT: You are free to use and modify this code for any use, on the condition that this copyright notice remains.\n */\n\nvar hello = function(name) {\n\treturn hello.use(name);\n};\n\nhello.utils = {\n\n\t// Extend the first object with the properties and methods of the second\n\textend: function(r /*, a[, b[, ...]] */) {\n\n\t\t// Get the arguments as an array but ommit the initial item\n\t\tArray.prototype.slice.call(arguments, 1).forEach(function(a) {\n\t\t\tif (Array.isArray(r) && Array.isArray(a)) {\n\t\t\t\tArray.prototype.push.apply(r, a);\n\t\t\t}\n\t\t\telse if (r && (r instanceof Object || typeof r === 'object') && a && (a instanceof Object || typeof a === 'object') && r !== a) {\n\t\t\t\tfor (var x in a) {\n\t\t\t\t\tr[x] = hello.utils.extend(r[x], a[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t// Clone it\n\t\t\t\t\ta = a.slice(0);\n\t\t\t\t}\n\n\t\t\t\tr = a;\n\t\t\t}\n\t\t});\n\n\t\treturn r;\n\t}\n};\n\n// Core library\nhello.utils.extend(hello, {\n\n\tsettings: {\n\n\t\t// OAuth2 authentication defaults\n\t\tredirect_uri: window.location.href.split('#')[0],\n\t\tresponse_type: 'token',\n\t\tdisplay: 'popup',\n\t\tstate: '',\n\n\t\t// OAuth1 shim\n\t\t// The path to the OAuth1 server for signing user requests\n\t\t// Want to recreate your own? Checkout https://github.com/MrSwitch/node-oauth-shim\n\t\toauth_proxy: 'https://auth-server.herokuapp.com/proxy',\n\n\t\t// API timeout in milliseconds\n\t\ttimeout: 20000,\n\n\t\t// Popup Options\n\t\tpopup: {\n\t\t\tresizable: 1,\n\t\t\tscrollbars: 1,\n\t\t\twidth: 500,\n\t\t\theight: 550\n\t\t},\n\n\t\t// Default scope\n\t\t// Many services require atleast a profile scope,\n\t\t// HelloJS automatially includes the value of provider.scope_map.basic\n\t\t// If that's not required it can be removed via hello.settings.scope.length = 0;\n\t\tscope: ['basic'],\n\n\t\t// Scope Maps\n\t\t// This is the default module scope, these are the defaults which each service is mapped too.\n\t\t// By including them here it prevents the scope from being applied accidentally\n\t\tscope_map: {\n\t\t\tbasic: ''\n\t\t},\n\n\t\t// Default service / network\n\t\tdefault_service: null,\n\n\t\t// Force authentication\n\t\t// When hello.login is fired.\n\t\t// (null): ignore current session expiry and continue with login\n\t\t// (true): ignore current session expiry and continue with login, ask for user to reauthenticate\n\t\t// (false): if the current session looks good for the request scopes return the current session.\n\t\tforce: null,\n\n\t\t// Page URL\n\t\t// When 'display=page' this property defines where the users page should end up after redirect_uri\n\t\t// Ths could be problematic if the redirect_uri is indeed the final place,\n\t\t// Typically this circumvents the problem of the redirect_url being a dumb relay page.\n\t\tpage_uri: window.location.href\n\t},\n\n\t// Service configuration objects\n\tservices: {},\n\n\t// Use\n\t// Define a new instance of the HelloJS library with a default service\n\tuse: function(service) {\n\n\t\t// Create self, which inherits from its parent\n\t\tvar self = Object.create(this);\n\n\t\t// Inherit the prototype from its parent\n\t\tself.settings = Object.create(this.settings);\n\n\t\t// Define the default service\n\t\tif (service) {\n\t\t\tself.settings.default_service = service;\n\t\t}\n\n\t\t// Create an instance of Events\n\t\tself.utils.Event.call(self);\n\n\t\treturn self;\n\t},\n\n\t// Initialize\n\t// Define the client_ids for the endpoint services\n\t// @param object o, contains a key value pair, service => clientId\n\t// @param object opts, contains a key value pair of options used for defining the authentication defaults\n\t// @param number timeout, timeout in seconds\n\tinit: function(services, options) {\n\n\t\tvar utils = this.utils;\n\n\t\tif (!services) {\n\t\t\treturn this.services;\n\t\t}\n\n\t\t// Define provider credentials\n\t\t// Reformat the ID field\n\t\tfor (var x in services) {if (services.hasOwnProperty(x)) {\n\t\t\tif (typeof (services[x]) !== 'object') {\n\t\t\t\tservices[x] = {id: services[x]};\n\t\t\t}\n\t\t}}\n\n\t\t// Merge services if there already exists some\n\t\tutils.extend(this.services, services);\n\n\t\t// Update the default settings with this one.\n\t\tif (options) {\n\t\t\tutils.extend(this.settings, options);\n\n\t\t\t// Do this immediatly incase the browser changes the current path.\n\t\t\tif ('redirect_uri' in options) {\n\t\t\t\tthis.settings.redirect_uri = utils.url(options.redirect_uri).href;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t// Login\n\t// Using the endpoint\n\t// @param network stringify       name to connect to\n\t// @param options object    (optional)  {display mode, is either none|popup(default)|page, scope: email,birthday,publish, .. }\n\t// @param callback  function  (optional)  fired on signin\n\tlogin: function() {\n\n\t\t// Create an object which inherits its parent as the prototype and constructs a new event chain.\n\t\tvar _this = this;\n\t\tvar utils = _this.utils;\n\t\tvar error = utils.error;\n\t\tvar promise = utils.Promise();\n\n\t\t// Get parameters\n\t\tvar p = utils.args({network: 's', options: 'o', callback: 'f'}, arguments);\n\n\t\t// Local vars\n\t\tvar url;\n\n\t\t// Get all the custom options and store to be appended to the querystring\n\t\tvar qs = utils.diffKey(p.options, _this.settings);\n\n\t\t// Merge/override options with app defaults\n\t\tvar opts = p.options = utils.merge(_this.settings, p.options || {});\n\n\t\t// Merge/override options with app defaults\n\t\topts.popup = utils.merge(_this.settings.popup, p.options.popup || {});\n\n\t\t// Network\n\t\tp.network = p.network || _this.settings.default_service;\n\n\t\t// Bind callback to both reject and fulfill states\n\t\tpromise.proxy.then(p.callback, p.callback);\n\n\t\t// Trigger an event on the global listener\n\t\tfunction emit(s, value) {\n\t\t\thello.emit(s, value);\n\t\t}\n\n\t\tpromise.proxy.then(emit.bind(this, 'auth.login auth'), emit.bind(this, 'auth.failed auth'));\n\n\t\t// Is our service valid?\n\t\tif (typeof (p.network) !== 'string' || !(p.network in _this.services)) {\n\t\t\t// Trigger the default login.\n\t\t\t// Ahh we dont have one.\n\t\t\treturn promise.reject(error('invalid_network', 'The provided network was not recognized'));\n\t\t}\n\n\t\tvar provider = _this.services[p.network];\n\n\t\t// Create a global listener to capture events triggered out of scope\n\t\tvar callbackId = utils.globalEvent(function(str) {\n\n\t\t\t// The responseHandler returns a string, lets save this locally\n\t\t\tvar obj;\n\n\t\t\tif (str) {\n\t\t\t\tobj = JSON.parse(str);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobj = error('cancelled', 'The authentication was not completed');\n\t\t\t}\n\n\t\t\t// Handle these response using the local\n\t\t\t// Trigger on the parent\n\t\t\tif (!obj.error) {\n\n\t\t\t\t// Save on the parent window the new credentials\n\t\t\t\t// This fixes an IE10 bug i think... atleast it does for me.\n\t\t\t\tutils.store(obj.network, obj);\n\n\t\t\t\t// Fulfill a successful login\n\t\t\t\tpromise.fulfill({\n\t\t\t\t\tnetwork: obj.network,\n\t\t\t\t\tauthResponse: obj\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Reject a successful login\n\t\t\t\tpromise.reject(obj);\n\t\t\t}\n\t\t});\n\n\t\tvar redirectUri = utils.url(opts.redirect_uri).href;\n\n\t\t// May be a space-delimited list of multiple, complementary types\n\t\tvar responseType = provider.oauth.response_type || opts.response_type;\n\n\t\t// Fallback to token if the module hasn't defined a grant url\n\t\tif (/\\bcode\\b/.test(responseType) && !provider.oauth.grant) {\n\t\t\tresponseType = responseType.replace(/\\bcode\\b/, 'token');\n\t\t}\n\n\t\t// Query string parameters, we may pass our own arguments to form the querystring\n\t\tp.qs = utils.merge(qs, {\n\t\t\tclient_id: encodeURIComponent(provider.id),\n\t\t\tresponse_type: encodeURIComponent(responseType),\n\t\t\tredirect_uri: encodeURIComponent(redirectUri),\n\t\t\tstate: {\n\t\t\t\tclient_id: provider.id,\n\t\t\t\tnetwork: p.network,\n\t\t\t\tdisplay: opts.display,\n\t\t\t\tcallback: callbackId,\n\t\t\t\tstate: opts.state,\n\t\t\t\tredirect_uri: redirectUri\n\t\t\t}\n\t\t});\n\n\t\t// Get current session for merging scopes, and for quick auth response\n\t\tvar session = utils.store(p.network);\n\n\t\t// Scopes (authentication permisions)\n\t\t// Ensure this is a string - IE has a problem moving Arrays between windows\n\t\t// Append the setup scope\n\t\tvar SCOPE_SPLIT = /[,\\s]+/;\n\n\t\t// Include default scope settings (cloned).\n\t\tvar scope = _this.settings.scope ? [_this.settings.scope.toString()] : [];\n\n\t\t// Extend the providers scope list with the default\n\t\tvar scopeMap = utils.merge(_this.settings.scope_map, provider.scope || {});\n\n\t\t// Add user defined scopes...\n\t\tif (opts.scope) {\n\t\t\tscope.push(opts.scope.toString());\n\t\t}\n\n\t\t// Append scopes from a previous session.\n\t\t// This helps keep app credentials constant,\n\t\t// Avoiding having to keep tabs on what scopes are authorized\n\t\tif (session && 'scope' in session && session.scope instanceof String) {\n\t\t\tscope.push(session.scope);\n\t\t}\n\n\t\t// Join and Split again\n\t\tscope = scope.join(',').split(SCOPE_SPLIT);\n\n\t\t// Format remove duplicates and empty values\n\t\tscope = utils.unique(scope).filter(filterEmpty);\n\n\t\t// Save the the scopes to the state with the names that they were requested with.\n\t\tp.qs.state.scope = scope.join(',');\n\n\t\t// Map scopes to the providers naming convention\n\t\tscope = scope.map(function(item) {\n\t\t\t// Does this have a mapping?\n\t\t\treturn (item in scopeMap) ? scopeMap[item] : item;\n\t\t});\n\n\t\t// Stringify and Arrayify so that double mapped scopes are given the chance to be formatted\n\t\tscope = scope.join(',').split(SCOPE_SPLIT);\n\n\t\t// Again...\n\t\t// Format remove duplicates and empty values\n\t\tscope = utils.unique(scope).filter(filterEmpty);\n\n\t\t// Join with the expected scope delimiter into a string\n\t\tp.qs.scope = scope.join(provider.scope_delim || ',');\n\n\t\t// Is the user already signed in with the appropriate scopes, valid access_token?\n\t\tif (opts.force === false) {\n\n\t\t\tif (session && 'access_token' in session && session.access_token && 'expires' in session && session.expires > ((new Date()).getTime() / 1e3)) {\n\t\t\t\t// What is different about the scopes in the session vs the scopes in the new login?\n\t\t\t\tvar diff = utils.diff((session.scope || '').split(SCOPE_SPLIT), (p.qs.state.scope || '').split(SCOPE_SPLIT));\n\t\t\t\tif (diff.length === 0) {\n\n\t\t\t\t\t// OK trigger the callback\n\t\t\t\t\tpromise.fulfill({\n\t\t\t\t\t\tunchanged: true,\n\t\t\t\t\t\tnetwork: p.network,\n\t\t\t\t\t\tauthResponse: session\n\t\t\t\t\t});\n\n\t\t\t\t\t// Nothing has changed\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Page URL\n\t\tif (opts.display === 'page' && opts.page_uri) {\n\t\t\t// Add a page location, place to endup after session has authenticated\n\t\t\tp.qs.state.page_uri = utils.url(opts.page_uri).href;\n\t\t}\n\n\t\t// Bespoke\n\t\t// Override login querystrings from auth_options\n\t\tif ('login' in provider && typeof (provider.login) === 'function') {\n\t\t\t// Format the paramaters according to the providers formatting function\n\t\t\tprovider.login(p);\n\t\t}\n\n\t\t// Add OAuth to state\n\t\t// Where the service is going to take advantage of the oauth_proxy\n\t\tif (!/\\btoken\\b/.test(responseType) ||\n\t\tparseInt(provider.oauth.version, 10) < 2 ||\n\t\t(opts.display === 'none' && provider.oauth.grant && session && session.refresh_token)) {\n\n\t\t\t// Add the oauth endpoints\n\t\t\tp.qs.state.oauth = provider.oauth;\n\n\t\t\t// Add the proxy url\n\t\t\tp.qs.state.oauth_proxy = opts.oauth_proxy;\n\n\t\t}\n\n\t\t// Convert state to a string\n\t\tp.qs.state = encodeURIComponent(JSON.stringify(p.qs.state));\n\n\t\t// URL\n\t\tif (parseInt(provider.oauth.version, 10) === 1) {\n\n\t\t\t// Turn the request to the OAuth Proxy for 3-legged auth\n\t\t\turl = utils.qs(opts.oauth_proxy, p.qs, encodeFunction);\n\t\t}\n\n\t\t// Refresh token\n\t\telse if (opts.display === 'none' && provider.oauth.grant && session && session.refresh_token) {\n\n\t\t\t// Add the refresh_token to the request\n\t\t\tp.qs.refresh_token = session.refresh_token;\n\n\t\t\t// Define the request path\n\t\t\turl = utils.qs(opts.oauth_proxy, p.qs, encodeFunction);\n\t\t}\n\t\telse {\n\t\t\turl = utils.qs(provider.oauth.auth, p.qs, encodeFunction);\n\t\t}\n\n\t\t// Broadcast this event as an auth:init\n\t\temit('auth.init', p);\n\n\t\t// Execute\n\t\t// Trigger how we want self displayed\n\t\tif (opts.display === 'none') {\n\t\t\t// Sign-in in the background, iframe\n\t\t\tutils.iframe(url, redirectUri);\n\t\t}\n\n\t\t// Triggering popup?\n\t\telse if (opts.display === 'popup') {\n\n\t\t\tvar popup = utils.popup(url, redirectUri, opts.popup);\n\n\t\t\tvar timer = setInterval(function() {\n\t\t\t\tif (!popup || popup.closed) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\tif (!promise.state) {\n\n\t\t\t\t\t\tvar response = error('cancelled', 'Login has been cancelled');\n\n\t\t\t\t\t\tif (!popup) {\n\t\t\t\t\t\t\tresponse = error('blocked', 'Popup was blocked');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponse.network = p.network;\n\n\t\t\t\t\t\tpromise.reject(response);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t}\n\n\t\telse {\n\t\t\twindow.location = url;\n\t\t}\n\n\t\treturn promise.proxy;\n\n\t\tfunction encodeFunction(s) {return s;}\n\n\t\tfunction filterEmpty(s) {return !!s;}\n\t},\n\n\t// Remove any data associated with a given service\n\t// @param string name of the service\n\t// @param function callback\n\tlogout: function() {\n\n\t\tvar _this = this;\n\t\tvar utils = _this.utils;\n\t\tvar error = utils.error;\n\n\t\t// Create a new promise\n\t\tvar promise = utils.Promise();\n\n\t\tvar p = utils.args({name:'s', options: 'o', callback: 'f'}, arguments);\n\n\t\tp.options = p.options || {};\n\n\t\t// Add callback to events\n\t\tpromise.proxy.then(p.callback, p.callback);\n\n\t\t// Trigger an event on the global listener\n\t\tfunction emit(s, value) {\n\t\t\thello.emit(s, value);\n\t\t}\n\n\t\tpromise.proxy.then(emit.bind(this, 'auth.logout auth'), emit.bind(this, 'error'));\n\n\t\t// Network\n\t\tp.name = p.name || this.settings.default_service;\n\t\tp.authResponse = utils.store(p.name);\n\n\t\tif (p.name && !(p.name in _this.services)) {\n\n\t\t\tpromise.reject(error('invalid_network', 'The network was unrecognized'));\n\n\t\t}\n\t\telse if (p.name && p.authResponse) {\n\n\t\t\t// Define the callback\n\t\t\tvar callback = function(opts) {\n\n\t\t\t\t// Remove from the store\n\t\t\t\tutils.store(p.name, null);\n\n\t\t\t\t// Emit events by default\n\t\t\t\tpromise.fulfill(hello.utils.merge({network:p.name}, opts || {}));\n\t\t\t};\n\n\t\t\t// Run an async operation to remove the users session\n\t\t\tvar _opts = {};\n\t\t\tif (p.options.force) {\n\t\t\t\tvar logout = _this.services[p.name].logout;\n\t\t\t\tif (logout) {\n\t\t\t\t\t// Convert logout to URL string,\n\t\t\t\t\t// If no string is returned, then this function will handle the logout async style\n\t\t\t\t\tif (typeof (logout) === 'function') {\n\t\t\t\t\t\tlogout = logout(callback, p);\n\t\t\t\t\t}\n\n\t\t\t\t\t// If logout is a string then assume URL and open in iframe.\n\t\t\t\t\tif (typeof (logout) === 'string') {\n\t\t\t\t\t\tutils.iframe(logout);\n\t\t\t\t\t\t_opts.force = null;\n\t\t\t\t\t\t_opts.message = 'Logout success on providers site was indeterminate';\n\t\t\t\t\t}\n\t\t\t\t\telse if (logout === undefined) {\n\t\t\t\t\t\t// The callback function will handle the response.\n\t\t\t\t\t\treturn promise.proxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove local credentials\n\t\t\tcallback(_opts);\n\t\t}\n\t\telse {\n\t\t\tpromise.reject(error('invalid_session', 'There was no session to remove'));\n\t\t}\n\n\t\treturn promise.proxy;\n\t},\n\n\t// Returns all the sessions that are subscribed too\n\t// @param string optional, name of the service to get information about.\n\tgetAuthResponse: function(service) {\n\n\t\t// If the service doesn't exist\n\t\tservice = service || this.settings.default_service;\n\n\t\tif (!service || !(service in this.services)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.utils.store(service) || null;\n\t},\n\n\t// Events: placeholder for the events\n\tevents: {}\n});\n\n// Core utilities\nhello.utils.extend(hello.utils, {\n\n\t// Error\n\terror: function(code, message) {\n\t\treturn {\n\t\t\terror: {\n\t\t\t\tcode: code,\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t};\n\t},\n\n\t// Append the querystring to a url\n\t// @param string url\n\t// @param object parameters\n\tqs: function(url, params, formatFunction) {\n\n\t\tif (params) {\n\n\t\t\t// Set default formatting function\n\t\t\tformatFunction = formatFunction || encodeURIComponent;\n\n\t\t\t// Override the items in the URL which already exist\n\t\t\tfor (var x in params) {\n\t\t\t\tvar str = '([\\\\?\\\\&])' + x + '=[^\\\\&]*';\n\t\t\t\tvar reg = new RegExp(str);\n\t\t\t\tif (url.match(reg)) {\n\t\t\t\t\turl = url.replace(reg, '$1' + x + '=' + formatFunction(params[x]));\n\t\t\t\t\tdelete params[x];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.isEmpty(params)) {\n\t\t\treturn url + (url.indexOf('?') > -1 ? '&' : '?') + this.param(params, formatFunction);\n\t\t}\n\n\t\treturn url;\n\t},\n\n\t// Param\n\t// Explode/encode the parameters of an URL string/object\n\t// @param string s, string to decode\n\tparam: function(s, formatFunction) {\n\t\tvar b;\n\t\tvar a = {};\n\t\tvar m;\n\n\t\tif (typeof (s) === 'string') {\n\n\t\t\tformatFunction = formatFunction || decodeURIComponent;\n\n\t\t\tm = s.replace(/^[\\#\\?]/, '').match(/([^=\\/\\&]+)=([^\\&]+)/g);\n\t\t\tif (m) {\n\t\t\t\tfor (var i = 0; i < m.length; i++) {\n\t\t\t\t\tb = m[i].match(/([^=]+)=(.*)/);\n\t\t\t\t\ta[b[1]] = formatFunction(b[2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\telse {\n\n\t\t\tformatFunction = formatFunction || encodeURIComponent;\n\n\t\t\tvar o = s;\n\n\t\t\ta = [];\n\n\t\t\tfor (var x in o) {if (o.hasOwnProperty(x)) {\n\t\t\t\tif (o.hasOwnProperty(x)) {\n\t\t\t\t\ta.push([x, o[x] === '?' ? '?' : formatFunction(o[x])].join('='));\n\t\t\t\t}\n\t\t\t}}\n\n\t\t\treturn a.join('&');\n\t\t}\n\t},\n\n\t// Local storage facade\n\tstore: (function() {\n\n\t\tvar a = ['localStorage', 'sessionStorage'];\n\t\tvar i = -1;\n\t\tvar prefix = 'test';\n\n\t\t// Set LocalStorage\n\t\tvar localStorage;\n\n\t\twhile (a[++i]) {\n\t\t\ttry {\n\t\t\t\t// In Chrome with cookies blocked, calling localStorage throws an error\n\t\t\t\tlocalStorage = window[a[i]];\n\t\t\t\tlocalStorage.setItem(prefix + i, i);\n\t\t\t\tlocalStorage.removeItem(prefix + i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tlocalStorage = null;\n\t\t\t}\n\t\t}\n\n\t\tif (!localStorage) {\n\n\t\t\tvar cache = null;\n\n\t\t\tlocalStorage = {\n\t\t\t\tgetItem: function(prop) {\n\t\t\t\t\tprop = prop + '=';\n\t\t\t\t\tvar m = document.cookie.split(';');\n\t\t\t\t\tfor (var i = 0; i < m.length; i++) {\n\t\t\t\t\t\tvar _m = m[i].replace(/(^\\s+|\\s+$)/, '');\n\t\t\t\t\t\tif (_m && _m.indexOf(prop) === 0) {\n\t\t\t\t\t\t\treturn _m.substr(prop.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn cache;\n\t\t\t\t},\n\n\t\t\t\tsetItem: function(prop, value) {\n\t\t\t\t\tcache = value;\n\t\t\t\t\tdocument.cookie = prop + '=' + value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Fill the cache up\n\t\t\tcache = localStorage.getItem('hello');\n\t\t}\n\n\t\tfunction get() {\n\t\t\tvar json = {};\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(localStorage.getItem('hello')) || {};\n\t\t\t}\n\t\t\tcatch (e) {}\n\n\t\t\treturn json;\n\t\t}\n\n\t\tfunction set(json) {\n\t\t\tlocalStorage.setItem('hello', JSON.stringify(json));\n\t\t}\n\n\t\t// Check if the browser support local storage\n\t\treturn function(name, value, days) {\n\n\t\t\t// Local storage\n\t\t\tvar json = get();\n\n\t\t\tif (name && value === undefined) {\n\t\t\t\treturn json[name] || null;\n\t\t\t}\n\t\t\telse if (name && value === null) {\n\t\t\t\ttry {\n\t\t\t\t\tdelete json[name];\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tjson[name] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (name) {\n\t\t\t\tjson[name] = value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn json;\n\t\t\t}\n\n\t\t\tset(json);\n\n\t\t\treturn json || null;\n\t\t};\n\n\t})(),\n\n\t// Create and Append new DOM elements\n\t// @param node string\n\t// @param attr object literal\n\t// @param dom/string\n\tappend: function(node, attr, target) {\n\n\t\tvar n = typeof (node) === 'string' ? document.createElement(node) : node;\n\n\t\tif (typeof (attr) === 'object') {\n\t\t\tif ('tagName' in attr) {\n\t\t\t\ttarget = attr;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (var x in attr) {if (attr.hasOwnProperty(x)) {\n\t\t\t\t\tif (typeof (attr[x]) === 'object') {\n\t\t\t\t\t\tfor (var y in attr[x]) {if (attr[x].hasOwnProperty(y)) {\n\t\t\t\t\t\t\tn[x][y] = attr[x][y];\n\t\t\t\t\t\t}}\n\t\t\t\t\t}\n\t\t\t\t\telse if (x === 'html') {\n\t\t\t\t\t\tn.innerHTML = attr[x];\n\t\t\t\t\t}\n\n\t\t\t\t\t// IE doesn't like us setting methods with setAttribute\n\t\t\t\t\telse if (!/^on/.test(x)) {\n\t\t\t\t\t\tn.setAttribute(x, attr[x]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tn[x] = attr[x];\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t}\n\t\t}\n\n\t\tif (target === 'body') {\n\t\t\t(function self() {\n\t\t\t\tif (document.body) {\n\t\t\t\t\tdocument.body.appendChild(n);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetTimeout(self, 16);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\telse if (typeof (target) === 'object') {\n\t\t\ttarget.appendChild(n);\n\t\t}\n\t\telse if (typeof (target) === 'string') {\n\t\t\tdocument.getElementsByTagName(target)[0].appendChild(n);\n\t\t}\n\n\t\treturn n;\n\t},\n\n\t// An easy way to create a hidden iframe\n\t// @param string src\n\tiframe: function(src) {\n\t\tthis.append('iframe', {src: src, style: {position:'absolute', left: '-1000px', bottom: 0, height: '1px', width: '1px'}}, 'body');\n\t},\n\n\t// Recursive merge two objects into one, second parameter overides the first\n\t// @param a array\n\tmerge: function(/* Args: a, b, c, .. n */) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\targs.unshift({});\n\t\treturn this.extend.apply(null, args);\n\t},\n\n\t// Makes it easier to assign parameters, where some are optional\n\t// @param o object\n\t// @param a arguments\n\targs: function(o, args) {\n\n\t\tvar p = {};\n\t\tvar i = 0;\n\t\tvar t = null;\n\t\tvar x = null;\n\n\t\t// 'x' is the first key in the list of object parameters\n\t\tfor (x in o) {if (o.hasOwnProperty(x)) {\n\t\t\tbreak;\n\t\t}}\n\n\t\t// Passing in hash object of arguments?\n\t\t// Where the first argument can't be an object\n\t\tif ((args.length === 1) && (typeof (args[0]) === 'object') && o[x] != 'o!') {\n\n\t\t\t// Could this object still belong to a property?\n\t\t\t// Check the object keys if they match any of the property keys\n\t\t\tfor (x in args[0]) {if (o.hasOwnProperty(x)) {\n\t\t\t\t// Does this key exist in the property list?\n\t\t\t\tif (x in o) {\n\t\t\t\t\t// Yes this key does exist so its most likely this function has been invoked with an object parameter\n\t\t\t\t\t// Return first argument as the hash of all arguments\n\t\t\t\t\treturn args[0];\n\t\t\t\t}\n\t\t\t}}\n\t\t}\n\n\t\t// Else loop through and account for the missing ones.\n\t\tfor (x in o) {if (o.hasOwnProperty(x)) {\n\n\t\t\tt = typeof (args[i]);\n\n\t\t\tif ((typeof (o[x]) === 'function' && o[x].test(args[i])) || (typeof (o[x]) === 'string' && (\n\t\t\t(o[x].indexOf('s') > -1 && t === 'string') ||\n\t\t\t(o[x].indexOf('o') > -1 && t === 'object') ||\n\t\t\t(o[x].indexOf('i') > -1 && t === 'number') ||\n\t\t\t(o[x].indexOf('a') > -1 && t === 'object') ||\n\t\t\t(o[x].indexOf('f') > -1 && t === 'function')\n\t\t\t))\n\t\t\t) {\n\t\t\t\tp[x] = args[i++];\n\t\t\t}\n\n\t\t\telse if (typeof (o[x]) === 'string' && o[x].indexOf('!') > -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}}\n\n\t\treturn p;\n\t},\n\n\t// Returns a URL instance\n\turl: function(path) {\n\n\t\t// If the path is empty\n\t\tif (!path) {\n\t\t\treturn window.location;\n\t\t}\n\n\t\t// Chrome and FireFox support new URL() to extract URL objects\n\t\telse if (window.URL && URL instanceof Function && URL.length !== 0) {\n\t\t\treturn new URL(path, window.location);\n\t\t}\n\n\t\t// Ugly shim, it works!\n\t\telse {\n\t\t\tvar a = document.createElement('a');\n\t\t\ta.href = path;\n\t\t\treturn a.cloneNode(false);\n\t\t}\n\t},\n\n\tdiff: function(a, b) {\n\t\treturn b.filter(function(item) {\n\t\t\treturn a.indexOf(item) === -1;\n\t\t});\n\t},\n\n\t// Get the different hash of properties unique to `a`, and not in `b`\n\tdiffKey: function(a, b) {\n\t\tif (a || !b) {\n\t\t\tvar r = {};\n\t\t\tfor (var x in a) {\n\t\t\t\t// Does the property not exist?\n\t\t\t\tif (!(x in b)) {\n\t\t\t\t\tr[x] = a[x];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\treturn a;\n\t},\n\n\t// Unique\n\t// Remove duplicate and null values from an array\n\t// @param a array\n\tunique: function(a) {\n\t\tif (!Array.isArray(a)) { return []; }\n\n\t\treturn a.filter(function(item, index) {\n\t\t\t// Is this the first location of item\n\t\t\treturn a.indexOf(item) === index;\n\t\t});\n\t},\n\n\tisEmpty: function(obj) {\n\n\t\t// Scalar\n\t\tif (!obj)\n\t\t\treturn true;\n\n\t\t// Array\n\t\tif (Array.isArray(obj)) {\n\t\t\treturn !obj.length;\n\t\t}\n\t\telse if (typeof (obj) === 'object') {\n\t\t\t// Object\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t//jscs:disable\n\n\t/*!\n\t **  Thenable -- Embeddable Minimum Strictly-Compliant Promises/A+ 1.1.1 Thenable\n\t **  Copyright (c) 2013-2014 Ralf S. Engelschall <http://engelschall.com>\n\t **  Licensed under The MIT License <http://opensource.org/licenses/MIT>\n\t **  Source-Code distributed on <http://github.com/rse/thenable>\n\t */\n\tPromise: (function(){\n\t\t/*  promise states [Promises/A+ 2.1]  */\n\t\tvar STATE_PENDING   = 0;                                         /*  [Promises/A+ 2.1.1]  */\n\t\tvar STATE_FULFILLED = 1;                                         /*  [Promises/A+ 2.1.2]  */\n\t\tvar STATE_REJECTED  = 2;                                         /*  [Promises/A+ 2.1.3]  */\n\n\t\t/*  promise object constructor  */\n\t\tvar api = function (executor) {\n\t\t\t/*  optionally support non-constructor/plain-function call  */\n\t\t\tif (!(this instanceof api))\n\t\t\t\treturn new api(executor);\n\n\t\t\t/*  initialize object  */\n\t\t\tthis.id           = \"Thenable/1.0.6\";\n\t\t\tthis.state        = STATE_PENDING; /*  initial state  */\n\t\t\tthis.fulfillValue = undefined;     /*  initial value  */     /*  [Promises/A+ 1.3, 2.1.2.2]  */\n\t\t\tthis.rejectReason = undefined;     /*  initial reason */     /*  [Promises/A+ 1.5, 2.1.3.2]  */\n\t\t\tthis.onFulfilled  = [];            /*  initial handlers  */\n\t\t\tthis.onRejected   = [];            /*  initial handlers  */\n\n\t\t\t/*  provide optional information-hiding proxy  */\n\t\t\tthis.proxy = {\n\t\t\t\tthen: this.then.bind(this)\n\t\t\t};\n\n\t\t\t/*  support optional executor function  */\n\t\t\tif (typeof executor === \"function\")\n\t\t\t\texecutor.call(this, this.fulfill.bind(this), this.reject.bind(this));\n\t\t};\n\n\t\t/*  promise API methods  */\n\t\tapi.prototype = {\n\t\t\t/*  promise resolving methods  */\n\t\t\tfulfill: function (value) { return deliver(this, STATE_FULFILLED, \"fulfillValue\", value); },\n\t\t\treject:  function (value) { return deliver(this, STATE_REJECTED,  \"rejectReason\", value); },\n\n\t\t\t/*  \"The then Method\" [Promises/A+ 1.1, 1.2, 2.2]  */\n\t\t\tthen: function (onFulfilled, onRejected) {\n\t\t\t\tvar curr = this;\n\t\t\t\tvar next = new api();                                    /*  [Promises/A+ 2.2.7]  */\n\t\t\t\tcurr.onFulfilled.push(\n\t\t\t\t\tresolver(onFulfilled, next, \"fulfill\"));             /*  [Promises/A+ 2.2.2/2.2.6]  */\n\t\t\t\tcurr.onRejected.push(\n\t\t\t\t\tresolver(onRejected,  next, \"reject\" ));             /*  [Promises/A+ 2.2.3/2.2.6]  */\n\t\t\t\texecute(curr);\n\t\t\t\treturn next.proxy;                                       /*  [Promises/A+ 2.2.7, 3.3]  */\n\t\t\t}\n\t\t};\n\n\t\t/*  deliver an action  */\n\t\tvar deliver = function (curr, state, name, value) {\n\t\t\tif (curr.state === STATE_PENDING) {\n\t\t\t\tcurr.state = state;                                      /*  [Promises/A+ 2.1.2.1, 2.1.3.1]  */\n\t\t\t\tcurr[name] = value;                                      /*  [Promises/A+ 2.1.2.2, 2.1.3.2]  */\n\t\t\t\texecute(curr);\n\t\t\t}\n\t\t\treturn curr;\n\t\t};\n\n\t\t/*  execute all handlers  */\n\t\tvar execute = function (curr) {\n\t\t\tif (curr.state === STATE_FULFILLED)\n\t\t\t\texecute_handlers(curr, \"onFulfilled\", curr.fulfillValue);\n\t\t\telse if (curr.state === STATE_REJECTED)\n\t\t\t\texecute_handlers(curr, \"onRejected\",  curr.rejectReason);\n\t\t};\n\n\t\t/*  execute particular set of handlers  */\n\t\tvar execute_handlers = function (curr, name, value) {\n\t\t\t/* global process: true */\n\t\t\t/* global setImmediate: true */\n\t\t\t/* global setTimeout: true */\n\n\t\t\t/*  short-circuit processing  */\n\t\t\tif (curr[name].length === 0)\n\t\t\t\treturn;\n\n\t\t\t/*  iterate over all handlers, exactly once  */\n\t\t\tvar handlers = curr[name];\n\t\t\tcurr[name] = [];                                             /*  [Promises/A+ 2.2.2.3, 2.2.3.3]  */\n\t\t\tvar func = function () {\n\t\t\t\tfor (var i = 0; i < handlers.length; i++)\n\t\t\t\t\thandlers[i](value);                                  /*  [Promises/A+ 2.2.5]  */\n\t\t\t};\n\n\t\t\t/*  execute procedure asynchronously  */                     /*  [Promises/A+ 2.2.4, 3.1]  */\n\t\t\tif (typeof process === \"object\" && typeof process.nextTick === \"function\")\n\t\t\t\tprocess.nextTick(func);\n\t\t\telse if (typeof setImmediate === \"function\")\n\t\t\t\tsetImmediate(func);\n\t\t\telse\n\t\t\t\tsetTimeout(func, 0);\n\t\t};\n\n\t\t/*  generate a resolver function  */\n\t\tvar resolver = function (cb, next, method) {\n\t\t\treturn function (value) {\n\t\t\t\tif (typeof cb !== \"function\")                            /*  [Promises/A+ 2.2.1, 2.2.7.3, 2.2.7.4]  */\n\t\t\t\t\tnext[method].call(next, value);                      /*  [Promises/A+ 2.2.7.3, 2.2.7.4]  */\n\t\t\t\telse {\n\t\t\t\t\tvar result;\n\t\t\t\t\ttry { result = cb(value); }                          /*  [Promises/A+ 2.2.2.1, 2.2.3.1, 2.2.5, 3.2]  */\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tnext.reject(e);                                  /*  [Promises/A+ 2.2.7.2]  */\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(next, result);                               /*  [Promises/A+ 2.2.7.1]  */\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\t/*  \"Promise Resolution Procedure\"  */                           /*  [Promises/A+ 2.3]  */\n\t\tvar resolve = function (promise, x) {\n\t\t\t/*  sanity check arguments  */                               /*  [Promises/A+ 2.3.1]  */\n\t\t\tif (promise === x || promise.proxy === x) {\n\t\t\t\tpromise.reject(new TypeError(\"cannot resolve promise with itself\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*  surgically check for a \"then\" method\n\t\t\t\t(mainly to just call the \"getter\" of \"then\" only once)  */\n\t\t\tvar then;\n\t\t\tif ((typeof x === \"object\" && x !== null) || typeof x === \"function\") {\n\t\t\t\ttry { then = x.then; }                                   /*  [Promises/A+ 2.3.3.1, 3.5]  */\n\t\t\t\tcatch (e) {\n\t\t\t\t\tpromise.reject(e);                                   /*  [Promises/A+ 2.3.3.2]  */\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*  handle own Thenables    [Promises/A+ 2.3.2]\n\t\t\t\tand similar \"thenables\" [Promises/A+ 2.3.3]  */\n\t\t\tif (typeof then === \"function\") {\n\t\t\t\tvar resolved = false;\n\t\t\t\ttry {\n\t\t\t\t\t/*  call retrieved \"then\" method */                  /*  [Promises/A+ 2.3.3.3]  */\n\t\t\t\t\tthen.call(x,\n\t\t\t\t\t\t/*  resolvePromise  */                           /*  [Promises/A+ 2.3.3.3.1]  */\n\t\t\t\t\t\tfunction (y) {\n\t\t\t\t\t\t\tif (resolved) return; resolved = true;       /*  [Promises/A+ 2.3.3.3.3]  */\n\t\t\t\t\t\t\tif (y === x)                                 /*  [Promises/A+ 3.6]  */\n\t\t\t\t\t\t\t\tpromise.reject(new TypeError(\"circular thenable chain\"));\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tresolve(promise, y);\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t/*  rejectPromise  */                            /*  [Promises/A+ 2.3.3.3.2]  */\n\t\t\t\t\t\tfunction (r) {\n\t\t\t\t\t\t\tif (resolved) return; resolved = true;       /*  [Promises/A+ 2.3.3.3.3]  */\n\t\t\t\t\t\t\tpromise.reject(r);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tif (!resolved)                                       /*  [Promises/A+ 2.3.3.3.3]  */\n\t\t\t\t\t\tpromise.reject(e);                               /*  [Promises/A+ 2.3.3.3.4]  */\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*  handle other values  */\n\t\t\tpromise.fulfill(x);                                          /*  [Promises/A+ 2.3.4, 2.3.3.4]  */\n\t\t};\n\n\t\t/*  export API  */\n\t\treturn api;\n\t})(),\n\n\t//jscs:enable\n\n\t// Event\n\t// A contructor superclass for adding event menthods, on, off, emit.\n\tEvent: function() {\n\n\t\tvar separator = /[\\s\\,]+/;\n\n\t\t// If this doesn't support getPrototype then we can't get prototype.events of the parent\n\t\t// So lets get the current instance events, and add those to a parent property\n\t\tthis.parent = {\n\t\t\tevents: this.events,\n\t\t\tfindEvents: this.findEvents,\n\t\t\tparent: this.parent,\n\t\t\tutils: this.utils\n\t\t};\n\n\t\tthis.events = {};\n\n\t\t// On, subscribe to events\n\t\t// @param evt   string\n\t\t// @param callback  function\n\t\tthis.on = function(evt, callback) {\n\n\t\t\tif (callback && typeof (callback) === 'function') {\n\t\t\t\tvar a = evt.split(separator);\n\t\t\t\tfor (var i = 0; i < a.length; i++) {\n\n\t\t\t\t\t// Has this event already been fired on this instance?\n\t\t\t\t\tthis.events[a[i]] = [callback].concat(this.events[a[i]] || []);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t// Off, unsubscribe to events\n\t\t// @param evt   string\n\t\t// @param callback  function\n\t\tthis.off = function(evt, callback) {\n\n\t\t\tthis.findEvents(evt, function(name, index) {\n\t\t\t\tif (!callback || this.events[name][index] === callback) {\n\t\t\t\t\tthis.events[name][index] = null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn this;\n\t\t};\n\n\t\t// Emit\n\t\t// Triggers any subscribed events\n\t\tthis.emit = function(evt /*, data, ... */) {\n\n\t\t\t// Get arguments as an Array, knock off the first one\n\t\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\t\targs.push(evt);\n\n\t\t\t// Handler\n\t\t\tvar handler = function(name, index) {\n\n\t\t\t\t// Replace the last property with the event name\n\t\t\t\targs[args.length - 1] = (name === '*' ? evt : name);\n\n\t\t\t\t// Trigger\n\t\t\t\tthis.events[name][index].apply(this, args);\n\t\t\t};\n\n\t\t\t// Find the callbacks which match the condition and call\n\t\t\tvar _this = this;\n\t\t\twhile (_this && _this.findEvents) {\n\n\t\t\t\t// Find events which match\n\t\t\t\t_this.findEvents(evt + ',*', handler);\n\t\t\t\t_this = _this.parent;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t//\n\t\t// Easy functions\n\t\tthis.emitAfter = function() {\n\t\t\tvar _this = this;\n\t\t\tvar args = arguments;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_this.emit.apply(_this, args);\n\t\t\t}, 0);\n\n\t\t\treturn this;\n\t\t};\n\n\t\tthis.findEvents = function(evt, callback) {\n\n\t\t\tvar a = evt.split(separator);\n\n\t\t\tfor (var name in this.events) {if (this.events.hasOwnProperty(name)) {\n\n\t\t\t\tif (a.indexOf(name) > -1) {\n\n\t\t\t\t\tfor (var i = 0; i < this.events[name].length; i++) {\n\n\t\t\t\t\t\t// Does the event handler exist?\n\t\t\t\t\t\tif (this.events[name][i]) {\n\t\t\t\t\t\t\t// Emit on the local instance of this\n\t\t\t\t\t\t\tcallback.call(this, name, i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t};\n\n\t\treturn this;\n\t},\n\n\t// Global Events\n\t// Attach the callback to the window object\n\t// Return its unique reference\n\tglobalEvent: function(callback, guid) {\n\t\t// If the guid has not been supplied then create a new one.\n\t\tguid = guid || '_hellojs_' + parseInt(Math.random() * 1e12, 10).toString(36);\n\n\t\t// Define the callback function\n\t\twindow[guid] = function() {\n\t\t\t// Trigger the callback\n\t\t\ttry {\n\t\t\t\tif (callback.apply(this, arguments)) {\n\t\t\t\t\tdelete window[guid];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t};\n\n\t\treturn guid;\n\t},\n\n\t// Trigger a clientside popup\n\t// This has been augmented to support PhoneGap\n\tpopup: function(url, redirectUri, options) {\n\n\t\tvar documentElement = document.documentElement;\n\n\t\t// Multi Screen Popup Positioning (http://stackoverflow.com/a/16861050)\n\t\t// Credit: http://www.xtf.dk/2011/08/center-new-popup-window-even-on.html\n\t\t// Fixes dual-screen position                         Most browsers      Firefox\n\n\t\tif (options.height) {\n\t\t\tvar dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;\n\t\t\tvar height = screen.height || window.innerHeight || documentElement.clientHeight;\n\t\t\toptions.top = (options.top) ? options.top : parseInt((height - options.height) / 2, 10) + dualScreenTop;\n\t\t}\n\n\t\tif (options.width) {\n\t\t\tvar dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;\n\t\t\tvar width = screen.width || window.innerWidth || documentElement.clientWidth;\n\t\t\toptions.left = (options.left) ? options.left : parseInt((width - options.width) / 2, 10) + dualScreenLeft;\n\t\t}\n\n\t\t// Convert options into an array\n\t\tvar optionsArray = [];\n\t\tObject.keys(options).forEach(function(name) {\n\t\t\tvar value = options[name];\n\t\t\toptionsArray.push(name + (value !== null ? '=' + value : ''));\n\t\t});\n\n\t\t// Call the open() function with the initial path\n\t\t//\n\t\t// OAuth redirect, fixes URI fragments from being lost in Safari\n\t\t// (URI Fragments within 302 Location URI are lost over HTTPS)\n\t\t// Loading the redirect.html before triggering the OAuth Flow seems to fix it.\n\t\t//\n\t\t// Firefox  decodes URL fragments when calling location.hash.\n\t\t//  - This is bad if the value contains break points which are escaped\n\t\t//  - Hence the url must be encoded twice as it contains breakpoints.\n\t\tif (navigator.userAgent.indexOf('Safari') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n\t\t\turl = redirectUri + '#oauth_redirect=' + encodeURIComponent(encodeURIComponent(url));\n\t\t}\n\n\t\tvar popup = window.open(\n\t\t\turl,\n\t\t\t'_blank',\n\t\t\toptionsArray.join(',')\n\t\t);\n\n\t\tif (popup && popup.focus) {\n\t\t\tpopup.focus();\n\t\t}\n\n\t\treturn popup;\n\t},\n\n\t// OAuth and API response handler\n\tresponseHandler: function(window, parent) {\n\n\t\tvar _this = this;\n\t\tvar p;\n\t\tvar location = window.location;\n\n\t\t// Is this an auth relay message which needs to call the proxy?\n\t\tp = _this.param(location.search);\n\n\t\t// OAuth2 or OAuth1 server response?\n\t\tif (p && p.state && (p.code || p.oauth_token)) {\n\n\t\t\tvar state = JSON.parse(p.state);\n\n\t\t\t// Add this path as the redirect_uri\n\t\t\tp.redirect_uri = state.redirect_uri || location.href.replace(/[\\?\\#].*$/, '');\n\n\t\t\t// Redirect to the host\n\t\t\tvar path = _this.qs(state.oauth_proxy, p);\n\n\t\t\tlocation.assign(path);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Save session, from redirected authentication\n\t\t// #access_token has come in?\n\t\t//\n\t\t// FACEBOOK is returning auth errors within as a query_string... thats a stickler for consistency.\n\t\t// SoundCloud is the state in the querystring and the token in the hashtag, so we'll mix the two together\n\n\t\tp = _this.merge(_this.param(location.search || ''), _this.param(location.hash || ''));\n\n\t\t// If p.state\n\t\tif (p && 'state' in p) {\n\n\t\t\t// Remove any addition information\n\t\t\t// E.g. p.state = 'facebook.page';\n\t\t\ttry {\n\t\t\t\tvar a = JSON.parse(p.state);\n\t\t\t\t_this.extend(p, a);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tvar stateDecoded = decodeURIComponent(p.state);\n\t\t\t\ttry {\n\t\t\t\t\tvar b = JSON.parse(stateDecoded);\n\t\t\t\t\t_this.extend(p, b);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tconsole.error('Could not decode state parameter');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Access_token?\n\t\t\tif (('access_token' in p && p.access_token) && p.network) {\n\n\t\t\t\tif (!p.expires_in || parseInt(p.expires_in, 10) === 0) {\n\t\t\t\t\t// If p.expires_in is unset, set to 0\n\t\t\t\t\tp.expires_in = 0;\n\t\t\t\t}\n\n\t\t\t\tp.expires_in = parseInt(p.expires_in, 10);\n\t\t\t\tp.expires = ((new Date()).getTime() / 1e3) + (p.expires_in || (60 * 60 * 24 * 365));\n\n\t\t\t\t// Lets use the \"state\" to assign it to one of our networks\n\t\t\t\tauthCallback(p, window, parent);\n\t\t\t}\n\n\t\t\t// Error=?\n\t\t\t// &error_description=?\n\t\t\t// &state=?\n\t\t\telse if (('error' in p && p.error) && p.network) {\n\n\t\t\t\tp.error = {\n\t\t\t\t\tcode: p.error,\n\t\t\t\t\tmessage: p.error_message || p.error_description\n\t\t\t\t};\n\n\t\t\t\t// Let the state handler handle it\n\t\t\t\tauthCallback(p, window, parent);\n\t\t\t}\n\n\t\t\t// API call, or a cancelled login\n\t\t\t// Result is serialized JSON string\n\t\t\telse if (p.callback && p.callback in parent) {\n\n\t\t\t\t// Trigger a function in the parent\n\t\t\t\tvar res = 'result' in p && p.result ? JSON.parse(p.result) : false;\n\n\t\t\t\t// Trigger the callback on the parent\n\t\t\t\tcallback(parent, p.callback)(res);\n\t\t\t\tcloseWindow();\n\t\t\t}\n\n\t\t\t// If this page is still open\n\t\t\tif (p.page_uri) {\n\t\t\t\tlocation.assign(p.page_uri);\n\t\t\t}\n\t\t}\n\n\t\t// OAuth redirect, fixes URI fragments from being lost in Safari\n\t\t// (URI Fragments within 302 Location URI are lost over HTTPS)\n\t\t// Loading the redirect.html before triggering the OAuth Flow seems to fix it.\n\t\telse if ('oauth_redirect' in p) {\n\n\t\t\tlocation.assign(decodeURIComponent(p.oauth_redirect));\n\t\t\treturn;\n\t\t}\n\n\t\t// Trigger a callback to authenticate\n\t\tfunction authCallback(obj, window, parent) {\n\n\t\t\tvar cb = obj.callback;\n\t\t\tvar network = obj.network;\n\n\t\t\t// Trigger the callback on the parent\n\t\t\t_this.store(network, obj);\n\n\t\t\t// If this is a page request it has no parent or opener window to handle callbacks\n\t\t\tif (('display' in obj) && obj.display === 'page') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove from session object\n\t\t\tif (parent && cb && cb in parent) {\n\n\t\t\t\ttry {\n\t\t\t\t\tdelete obj.callback;\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\n\t\t\t\t// Update store\n\t\t\t\t_this.store(network, obj);\n\n\t\t\t\t// Call the globalEvent function on the parent\n\t\t\t\t// It's safer to pass back a string to the parent,\n\t\t\t\t// Rather than an object/array (better for IE8)\n\t\t\t\tvar str = JSON.stringify(obj);\n\n\t\t\t\ttry {\n\t\t\t\t\tcallback(parent, cb)(str);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\t// Error thrown whilst executing parent callback\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloseWindow();\n\t\t}\n\n\t\tfunction callback(parent, callbackID) {\n\t\t\tif (callbackID.indexOf('_hellojs_') !== 0) {\n\t\t\t\treturn function() {\n\t\t\t\t\tthrow 'Could not execute callback ' + callbackID;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn parent[callbackID];\n\t\t}\n\n\t\tfunction closeWindow() {\n\n\t\t\tif (window.frameElement) {\n\t\t\t\t// Inside an iframe, remove from parent\n\t\t\t\tparent.document.body.removeChild(window.frameElement);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Close this current window\n\t\t\t\ttry {\n\t\t\t\t\twindow.close();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\n\t\t\t\t// IOS bug wont let us close a popup if still loading\n\t\t\t\tif (window.addEventListener) {\n\t\t\t\t\twindow.addEventListener('load', function() {\n\t\t\t\t\t\twindow.close();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n});\n\n// Events\n// Extend the hello object with its own event instance\nhello.utils.Event.call(hello);\n\n///////////////////////////////////\n// Monitoring session state\n// Check for session changes\n///////////////////////////////////\n\n(function(hello) {\n\n\t// Monitor for a change in state and fire\n\tvar oldSessions = {};\n\n\t// Hash of expired tokens\n\tvar expired = {};\n\n\t// Listen to other triggers to Auth events, use these to update this\n\thello.on('auth.login, auth.logout', function(auth) {\n\t\tif (auth && typeof (auth) === 'object' && auth.network) {\n\t\t\toldSessions[auth.network] = hello.utils.store(auth.network) || {};\n\t\t}\n\t});\n\n\t(function self() {\n\n\t\tvar CURRENT_TIME = ((new Date()).getTime() / 1e3);\n\t\tvar emit = function(eventName) {\n\t\t\thello.emit('auth.' + eventName, {\n\t\t\t\tnetwork: name,\n\t\t\t\tauthResponse: session\n\t\t\t});\n\t\t};\n\n\t\t// Loop through the services\n\t\tfor (var name in hello.services) {if (hello.services.hasOwnProperty(name)) {\n\n\t\t\tif (!hello.services[name].id) {\n\t\t\t\t// We haven't attached an ID so dont listen.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get session\n\t\t\tvar session = hello.utils.store(name) || {};\n\t\t\tvar provider = hello.services[name];\n\t\t\tvar oldSess = oldSessions[name] || {};\n\n\t\t\t// Listen for globalEvents that did not get triggered from the child\n\t\t\tif (session && 'callback' in session) {\n\n\t\t\t\t// To do remove from session object...\n\t\t\t\tvar cb = session.callback;\n\t\t\t\ttry {\n\t\t\t\t\tdelete session.callback;\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\n\t\t\t\t// Update store\n\t\t\t\t// Removing the callback\n\t\t\t\thello.utils.store(name, session);\n\n\t\t\t\t// Emit global events\n\t\t\t\ttry {\n\t\t\t\t\twindow[cb](session);\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\n\t\t\t// Refresh token\n\t\t\tif (session && ('expires' in session) && session.expires < CURRENT_TIME) {\n\n\t\t\t\t// If auto refresh is possible\n\t\t\t\t// Either the browser supports\n\t\t\t\tvar refresh = provider.refresh || session.refresh_token;\n\n\t\t\t\t// Has the refresh been run recently?\n\t\t\t\tif (refresh && (!(name in expired) || expired[name] < CURRENT_TIME)) {\n\t\t\t\t\t// Try to resignin\n\t\t\t\t\thello.emit('notice', name + ' has expired trying to resignin');\n\t\t\t\t\thello.login(name, {display: 'none', force: false});\n\n\t\t\t\t\t// Update expired, every 10 minutes\n\t\t\t\t\texpired[name] = CURRENT_TIME + 600;\n\t\t\t\t}\n\n\t\t\t\t// Does this provider not support refresh\n\t\t\t\telse if (!refresh && !(name in expired)) {\n\t\t\t\t\t// Label the event\n\t\t\t\t\temit('expired');\n\t\t\t\t\texpired[name] = true;\n\t\t\t\t}\n\n\t\t\t\t// If session has expired then we dont want to store its value until it can be established that its been updated\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Has session changed?\n\t\t\telse if (oldSess.access_token === session.access_token &&\n\t\t\toldSess.expires === session.expires) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Access_token has been removed\n\t\t\telse if (!session.access_token && oldSess.access_token) {\n\t\t\t\temit('logout');\n\t\t\t}\n\n\t\t\t// Access_token has been created\n\t\t\telse if (session.access_token && !oldSess.access_token) {\n\t\t\t\temit('login');\n\t\t\t}\n\n\t\t\t// Access_token has been updated\n\t\t\telse if (session.expires !== oldSess.expires) {\n\t\t\t\temit('update');\n\t\t\t}\n\n\t\t\t// Updated stored session\n\t\t\toldSessions[name] = session;\n\n\t\t\t// Remove the expired flags\n\t\t\tif (name in expired) {\n\t\t\t\tdelete expired[name];\n\t\t\t}\n\t\t}}\n\n\t\t// Check error events\n\t\tsetTimeout(self, 1000);\n\t})();\n\n})(hello);\n\n// EOF CORE lib\n//////////////////////////////////\n\n/////////////////////////////////////////\n// API\n// @param path    string\n// @param query   object (optional)\n// @param method  string (optional)\n// @param data    object (optional)\n// @param timeout integer (optional)\n// @param callback  function (optional)\n\nhello.api = function() {\n\n\t// Shorthand\n\tvar _this = this;\n\tvar utils = _this.utils;\n\tvar error = utils.error;\n\n\t// Construct a new Promise object\n\tvar promise = utils.Promise();\n\n\t// Arguments\n\tvar p = utils.args({path: 's!', query: 'o', method: 's', data: 'o', timeout: 'i', callback: 'f'}, arguments);\n\n\t// Method\n\tp.method = (p.method || 'get').toLowerCase();\n\n\t// Headers\n\tp.headers = p.headers || {};\n\n\t// Query\n\tp.query = p.query || {};\n\n\t// If get, put all parameters into query\n\tif (p.method === 'get' || p.method === 'delete') {\n\t\tutils.extend(p.query, p.data);\n\t\tp.data = {};\n\t}\n\n\tvar data = p.data = p.data || {};\n\n\t// Completed event callback\n\tpromise.then(p.callback, p.callback);\n\n\t// Remove the network from path, e.g. facebook:/me/friends\n\t// Results in { network : facebook, path : me/friends }\n\tif (!p.path) {\n\t\treturn promise.reject(error('invalid_path', 'Missing the path parameter from the request'));\n\t}\n\n\tp.path = p.path.replace(/^\\/+/, '');\n\tvar a = (p.path.split(/[\\/\\:]/, 2) || [])[0].toLowerCase();\n\n\tif (a in _this.services) {\n\t\tp.network = a;\n\t\tvar reg = new RegExp('^' + a + ':?\\/?');\n\t\tp.path = p.path.replace(reg, '');\n\t}\n\n\t// Network & Provider\n\t// Define the network that this request is made for\n\tp.network = _this.settings.default_service = p.network || _this.settings.default_service;\n\tvar o = _this.services[p.network];\n\n\t// INVALID\n\t// Is there no service by the given network name?\n\tif (!o) {\n\t\treturn promise.reject(error('invalid_network', 'Could not match the service requested: ' + p.network));\n\t}\n\n\t// PATH\n\t// As long as the path isn't flagged as unavaiable, e.g. path == false\n\n\tif (!(!(p.method in o) || !(p.path in o[p.method]) || o[p.method][p.path] !== false)) {\n\t\treturn promise.reject(error('invalid_path', 'The provided path is not available on the selected network'));\n\t}\n\n\t// PROXY\n\t// OAuth1 calls always need a proxy\n\n\tif (!p.oauth_proxy) {\n\t\tp.oauth_proxy = _this.settings.oauth_proxy;\n\t}\n\n\tif (!('proxy' in p)) {\n\t\tp.proxy = p.oauth_proxy && o.oauth && parseInt(o.oauth.version, 10) === 1;\n\t}\n\n\t// TIMEOUT\n\t// Adopt timeout from global settings by default\n\n\tif (!('timeout' in p)) {\n\t\tp.timeout = _this.settings.timeout;\n\t}\n\n\t// Format response\n\t// Whether to run the raw response through post processing.\n\tif (!('formatResponse' in p)) {\n\t\tp.formatResponse = true;\n\t}\n\n\t// Get the current session\n\t// Append the access_token to the query\n\tp.authResponse = _this.getAuthResponse(p.network);\n\tif (p.authResponse && p.authResponse.access_token) {\n\t\tp.query.access_token = p.authResponse.access_token;\n\t}\n\n\tvar url = p.path;\n\tvar m;\n\n\t// Store the query as options\n\t// This is used to populate the request object before the data is augmented by the prewrap handlers.\n\tp.options = utils.clone(p.query);\n\n\t// Clone the data object\n\t// Prevent this script overwriting the data of the incoming object.\n\t// Ensure that everytime we run an iteration the callbacks haven't removed some data\n\tp.data = utils.clone(data);\n\n\t// URL Mapping\n\t// Is there a map for the given URL?\n\tvar actions = o[{'delete': 'del'}[p.method] || p.method] || {};\n\n\t// Extrapolate the QueryString\n\t// Provide a clean path\n\t// Move the querystring into the data\n\tif (p.method === 'get') {\n\n\t\tvar query = url.split(/[\\?#]/)[1];\n\t\tif (query) {\n\t\t\tutils.extend(p.query, utils.param(query));\n\n\t\t\t// Remove the query part from the URL\n\t\t\turl = url.replace(/\\?.*?(#|$)/, '$1');\n\t\t}\n\t}\n\n\t// Is the hash fragment defined\n\tif ((m = url.match(/#(.+)/, ''))) {\n\t\turl = url.split('#')[0];\n\t\tp.path = m[1];\n\t}\n\telse if (url in actions) {\n\t\tp.path = url;\n\t\turl = actions[url];\n\t}\n\telse if ('default' in actions) {\n\t\turl = actions['default'];\n\t}\n\n\t// Redirect Handler\n\t// This defines for the Form+Iframe+Hash hack where to return the results too.\n\tp.redirect_uri = _this.settings.redirect_uri;\n\n\t// Define FormatHandler\n\t// The request can be procesed in a multitude of ways\n\t// Here's the options - depending on the browser and endpoint\n\tp.xhr = o.xhr;\n\tp.jsonp = o.jsonp;\n\tp.form = o.form;\n\n\t// Make request\n\tif (typeof (url) === 'function') {\n\t\t// Does self have its own callback?\n\t\turl(p, getPath);\n\t}\n\telse {\n\t\t// Else the URL is a string\n\t\tgetPath(url);\n\t}\n\n\treturn promise.proxy;\n\n\t// If url needs a base\n\t// Wrap everything in\n\tfunction getPath(url) {\n\n\t\t// Format the string if it needs it\n\t\turl = url.replace(/\\@\\{([a-z\\_\\-]+)(\\|.*?)?\\}/gi, function(m, key, defaults) {\n\t\t\tvar val = defaults ? defaults.replace(/^\\|/, '') : '';\n\t\t\tif (key in p.query) {\n\t\t\t\tval = p.query[key];\n\t\t\t\tdelete p.query[key];\n\t\t\t}\n\t\t\telse if (p.data && key in p.data) {\n\t\t\t\tval = p.data[key];\n\t\t\t\tdelete p.data[key];\n\t\t\t}\n\t\t\telse if (!defaults) {\n\t\t\t\tpromise.reject(error('missing_attribute', 'The attribute ' + key + ' is missing from the request'));\n\t\t\t}\n\n\t\t\treturn val;\n\t\t});\n\n\t\t// Add base\n\t\tif (!url.match(/^https?:\\/\\//)) {\n\t\t\turl = o.base + url;\n\t\t}\n\n\t\t// Define the request URL\n\t\tp.url = url;\n\n\t\t// Make the HTTP request with the curated request object\n\t\t// CALLBACK HANDLER\n\t\t// @ response object\n\t\t// @ statusCode integer if available\n\t\tutils.request(p, function(r, headers) {\n\n\t\t\t// Is this a raw response?\n\t\t\tif (!p.formatResponse) {\n\t\t\t\t// Bad request? error statusCode or otherwise contains an error response vis JSONP?\n\t\t\t\tif (typeof headers === 'object' ? (headers.statusCode >= 400) : (typeof r === 'object' && 'error' in r)) {\n\t\t\t\t\tpromise.reject(r);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpromise.fulfill(r);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Should this be an object\n\t\t\tif (r === true) {\n\t\t\t\tr = {success:true};\n\t\t\t}\n\t\t\telse if (!r) {\n\t\t\t\tr = {};\n\t\t\t}\n\n\t\t\t// The delete callback needs a better response\n\t\t\tif (p.method === 'delete') {\n\t\t\t\tr = (!r || utils.isEmpty(r)) ? {success:true} : r;\n\t\t\t}\n\n\t\t\t// FORMAT RESPONSE?\n\t\t\t// Does self request have a corresponding formatter\n\t\t\tif (o.wrap && ((p.path in o.wrap) || ('default' in o.wrap))) {\n\t\t\t\tvar wrap = (p.path in o.wrap ? p.path : 'default');\n\t\t\t\tvar time = (new Date()).getTime();\n\n\t\t\t\t// FORMAT RESPONSE\n\t\t\t\tvar b = o.wrap[wrap](r, headers, p);\n\n\t\t\t\t// Has the response been utterly overwritten?\n\t\t\t\t// Typically self augments the existing object.. but for those rare occassions\n\t\t\t\tif (b) {\n\t\t\t\t\tr = b;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Is there a next_page defined in the response?\n\t\t\tif (r && 'paging' in r && r.paging.next) {\n\n\t\t\t\t// Add the relative path if it is missing from the paging/next path\n\t\t\t\tif (r.paging.next[0] === '?') {\n\t\t\t\t\tr.paging.next = p.path + r.paging.next;\n\t\t\t\t}\n\n\t\t\t\t// The relative path has been defined, lets markup the handler in the HashFragment\n\t\t\t\telse {\n\t\t\t\t\tr.paging.next += '#' + p.path;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Dispatch to listeners\n\t\t\t// Emit events which pertain to the formatted response\n\t\t\tif (!r || 'error' in r) {\n\t\t\t\tpromise.reject(r);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpromise.fulfill(r);\n\t\t\t}\n\t\t});\n\t}\n};\n\n// API utilities\nhello.utils.extend(hello.utils, {\n\n\t// Make an HTTP request\n\trequest: function(p, callback) {\n\n\t\tvar _this = this;\n\t\tvar error = _this.error;\n\n\t\t// This has to go through a POST request\n\t\tif (!_this.isEmpty(p.data) && !('FileList' in window) && _this.hasBinary(p.data)) {\n\n\t\t\t// Disable XHR and JSONP\n\t\t\tp.xhr = false;\n\t\t\tp.jsonp = false;\n\t\t}\n\n\t\t// Check if the browser and service support CORS\n\t\tvar cors = this.request_cors(function() {\n\t\t\t// If it does then run this...\n\t\t\treturn ((p.xhr === undefined) || (p.xhr && (typeof (p.xhr) !== 'function' || p.xhr(p, p.query))));\n\t\t});\n\n\t\tif (cors) {\n\n\t\t\tformatUrl(p, function(url) {\n\n\t\t\t\tvar x = _this.xhr(p.method, url, p.headers, p.data, callback);\n\t\t\t\tx.onprogress = p.onprogress || null;\n\n\t\t\t\t// Windows Phone does not support xhr.upload, see #74\n\t\t\t\t// Feature detect\n\t\t\t\tif (x.upload && p.onuploadprogress) {\n\t\t\t\t\tx.upload.onprogress = p.onuploadprogress;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone the query object\n\t\t// Each request modifies the query object and needs to be tared after each one.\n\t\tvar _query = p.query;\n\n\t\tp.query = _this.clone(p.query);\n\n\t\t// Assign a new callbackID\n\t\tp.callbackID = _this.globalEvent();\n\n\t\t// JSONP\n\t\tif (p.jsonp !== false) {\n\n\t\t\t// Clone the query object\n\t\t\tp.query.callback = p.callbackID;\n\n\t\t\t// If the JSONP is a function then run it\n\t\t\tif (typeof (p.jsonp) === 'function') {\n\t\t\t\tp.jsonp(p, p.query);\n\t\t\t}\n\n\t\t\t// Lets use JSONP if the method is 'get'\n\t\t\tif (p.method === 'get') {\n\n\t\t\t\tformatUrl(p, function(url) {\n\t\t\t\t\t_this.jsonp(url, callback, p.callbackID, p.timeout);\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// It's not compatible reset query\n\t\t\t\tp.query = _query;\n\t\t\t}\n\n\t\t}\n\n\t\t// Otherwise we're on to the old school, iframe hacks and JSONP\n\t\tif (p.form !== false) {\n\n\t\t\t// Add some additional query parameters to the URL\n\t\t\t// We're pretty stuffed if the endpoint doesn't like these\n\t\t\tp.query.redirect_uri = p.redirect_uri;\n\t\t\tp.query.state = JSON.stringify({callback:p.callbackID});\n\n\t\t\tvar opts;\n\n\t\t\tif (typeof (p.form) === 'function') {\n\n\t\t\t\t// Format the request\n\t\t\t\topts = p.form(p, p.query);\n\t\t\t}\n\n\t\t\tif (p.method === 'post' && opts !== false) {\n\n\t\t\t\tformatUrl(p, function(url) {\n\t\t\t\t\t_this.post(url, p.data, opts, callback, p.callbackID, p.timeout);\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// None of the methods were successful throw an error\n\t\tcallback(error('invalid_request', 'There was no mechanism for handling this request'));\n\n\t\treturn;\n\n\t\t// Format URL\n\t\t// Constructs the request URL, optionally wraps the URL through a call to a proxy server\n\t\t// Returns the formatted URL\n\t\tfunction formatUrl(p, callback) {\n\n\t\t\t// Are we signing the request?\n\t\t\tvar sign;\n\n\t\t\t// OAuth1\n\t\t\t// Remove the token from the query before signing\n\t\t\tif (p.authResponse && p.authResponse.oauth && parseInt(p.authResponse.oauth.version, 10) === 1) {\n\n\t\t\t\t// OAUTH SIGNING PROXY\n\t\t\t\tsign = p.query.access_token;\n\n\t\t\t\t// Remove the access_token\n\t\t\t\tdelete p.query.access_token;\n\n\t\t\t\t// Enfore use of Proxy\n\t\t\t\tp.proxy = true;\n\t\t\t}\n\n\t\t\t// POST body to querystring\n\t\t\tif (p.data && (p.method === 'get' || p.method === 'delete')) {\n\t\t\t\t// Attach the p.data to the querystring.\n\t\t\t\t_this.extend(p.query, p.data);\n\t\t\t\tp.data = null;\n\t\t\t}\n\n\t\t\t// Construct the path\n\t\t\tvar path = _this.qs(p.url, p.query);\n\n\t\t\t// Proxy the request through a server\n\t\t\t// Used for signing OAuth1\n\t\t\t// And circumventing services without Access-Control Headers\n\t\t\tif (p.proxy) {\n\t\t\t\t// Use the proxy as a path\n\t\t\t\tpath = _this.qs(p.oauth_proxy, {\n\t\t\t\t\tpath: path,\n\t\t\t\t\taccess_token: sign || '',\n\n\t\t\t\t\t// This will prompt the request to be signed as though it is OAuth1\n\t\t\t\t\tthen: p.proxy_response_type || (p.method.toLowerCase() === 'get' ? 'redirect' : 'proxy'),\n\t\t\t\t\tmethod: p.method.toLowerCase(),\n\t\t\t\t\tsuppress_response_codes: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback(path);\n\t\t}\n\t},\n\n\t// Test whether the browser supports the CORS response\n\trequest_cors: function(callback) {\n\t\treturn 'withCredentials' in new XMLHttpRequest() && callback();\n\t},\n\n\t// Return the type of DOM object\n\tdomInstance: function(type, data) {\n\t\tvar test = 'HTML' + (type || '').replace(\n\t\t\t/^[a-z]/,\n\t\t\tfunction(m) {\n\t\t\t\treturn m.toUpperCase();\n\t\t\t}\n\n\t\t) + 'Element';\n\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (window[test]) {\n\t\t\treturn data instanceof window[test];\n\t\t}\n\t\telse if (window.Element) {\n\t\t\treturn data instanceof window.Element && (!type || (data.tagName && data.tagName.toLowerCase() === type));\n\t\t}\n\t\telse {\n\t\t\treturn (!(data instanceof Object || data instanceof Array || data instanceof String || data instanceof Number) && data.tagName && data.tagName.toLowerCase() === type);\n\t\t}\n\t},\n\n\t// Create a clone of an object\n\tclone: function(obj) {\n\t\t// Does not clone DOM elements, nor Binary data, e.g. Blobs, Filelists\n\t\tif (obj === null || typeof (obj) !== 'object' || obj instanceof Date || 'nodeName' in obj || this.isBinary(obj) || (typeof FormData === 'function' && obj instanceof FormData)) {\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\t// Clone each item in the array\n\t\t\treturn obj.map(this.clone.bind(this));\n\t\t}\n\n\t\t// But does clone everything else.\n\t\tvar clone = {};\n\t\tfor (var x in obj) {\n\t\t\tclone[x] = this.clone(obj[x]);\n\t\t}\n\n\t\treturn clone;\n\t},\n\n\t// XHR: uses CORS to make requests\n\txhr: function(method, url, headers, data, callback) {\n\n\t\tvar r = new XMLHttpRequest();\n\t\tvar error = this.error;\n\n\t\t// Binary?\n\t\tvar binary = false;\n\t\tif (method === 'blob') {\n\t\t\tbinary = method;\n\t\t\tmethod = 'GET';\n\t\t}\n\n\t\tmethod = method.toUpperCase();\n\n\t\t// Xhr.responseType 'json' is not supported in any of the vendors yet.\n\t\tr.onload = function(e) {\n\t\t\tvar json = r.response;\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(r.responseText);\n\t\t\t}\n\t\t\tcatch (_e) {\n\t\t\t\tif (r.status === 401) {\n\t\t\t\t\tjson = error('access_denied', r.statusText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar headers = headersToJSON(r.getAllResponseHeaders());\n\t\t\theaders.statusCode = r.status;\n\n\t\t\tcallback(json || (method === 'GET' ? error('empty_response', 'Could not get resource') : {}), headers);\n\t\t};\n\n\t\tr.onerror = function(e) {\n\t\t\tvar json = r.responseText;\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(r.responseText);\n\t\t\t}\n\t\t\tcatch (_e) {}\n\n\t\t\tcallback(json || error('access_denied', 'Could not get resource'));\n\t\t};\n\n\t\tvar x;\n\n\t\t// Should we add the query to the URL?\n\t\tif (method === 'GET' || method === 'DELETE') {\n\t\t\tdata = null;\n\t\t}\n\t\telse if (data && typeof (data) !== 'string' && !(data instanceof FormData) && !(data instanceof File) && !(data instanceof Blob)) {\n\t\t\t// Loop through and add formData\n\t\t\tvar f = new FormData();\n\t\t\tfor (x in data) if (data.hasOwnProperty(x)) {\n\t\t\t\tif (data[x] instanceof HTMLInputElement) {\n\t\t\t\t\tif ('files' in data[x] && data[x].files.length > 0) {\n\t\t\t\t\t\tf.append(x, data[x].files[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (data[x] instanceof Blob) {\n\t\t\t\t\tf.append(x, data[x], data.name);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf.append(x, data[x]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata = f;\n\t\t}\n\n\t\t// Open the path, async\n\t\tr.open(method, url, true);\n\n\t\tif (binary) {\n\t\t\tif ('responseType' in r) {\n\t\t\t\tr.responseType = binary;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr.overrideMimeType('text/plain; charset=x-user-defined');\n\t\t\t}\n\t\t}\n\n\t\t// Set any bespoke headers\n\t\tif (headers) {\n\t\t\tfor (x in headers) {\n\t\t\t\tr.setRequestHeader(x, headers[x]);\n\t\t\t}\n\t\t}\n\n\t\tr.send(data);\n\n\t\treturn r;\n\n\t\t// Headers are returned as a string\n\t\tfunction headersToJSON(s) {\n\t\t\tvar r = {};\n\t\t\tvar reg = /([a-z\\-]+):\\s?(.*);?/gi;\n\t\t\tvar m;\n\t\t\twhile ((m = reg.exec(s))) {\n\t\t\t\tr[m[1]] = m[2];\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\t},\n\n\t// JSONP\n\t// Injects a script tag into the DOM to be executed and appends a callback function to the window object\n\t// @param string/function pathFunc either a string of the URL or a callback function pathFunc(querystringhash, continueFunc);\n\t// @param function callback a function to call on completion;\n\tjsonp: function(url, callback, callbackID, timeout) {\n\n\t\tvar _this = this;\n\t\tvar error = _this.error;\n\n\t\t// Change the name of the callback\n\t\tvar bool = 0;\n\t\tvar head = document.getElementsByTagName('head')[0];\n\t\tvar operaFix;\n\t\tvar result = error('server_error', 'server_error');\n\t\tvar cb = function() {\n\t\t\tif (!(bool++)) {\n\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\tcallback(result);\n\t\t\t\t\thead.removeChild(script);\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t};\n\n\t\t// Add callback to the window object\n\t\tcallbackID = _this.globalEvent(function(json) {\n\t\t\tresult = json;\n\t\t\treturn true;\n\n\t\t\t// Mark callback as done\n\t\t}, callbackID);\n\n\t\t// The URL is a function for some cases and as such\n\t\t// Determine its value with a callback containing the new parameters of this function.\n\t\turl = url.replace(new RegExp('=\\\\?(&|$)'), '=' + callbackID + '$1');\n\n\t\t// Build script tag\n\t\tvar script = _this.append('script', {\n\t\t\tid: callbackID,\n\t\t\tname: callbackID,\n\t\t\tsrc: url,\n\t\t\tasync: true,\n\t\t\tonload: cb,\n\t\t\tonerror: cb,\n\t\t\tonreadystatechange: function() {\n\t\t\t\tif (/loaded|complete/i.test(this.readyState)) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Opera fix error\n\t\t// Problem: If an error occurs with script loading Opera fails to trigger the script.onerror handler we specified\n\t\t//\n\t\t// Fix:\n\t\t// By setting the request to synchronous we can trigger the error handler when all else fails.\n\t\t// This action will be ignored if we've already called the callback handler \"cb\" with a successful onload event\n\t\tif (window.navigator.userAgent.toLowerCase().indexOf('opera') > -1) {\n\t\t\toperaFix = _this.append('script', {\n\t\t\t\ttext: 'document.getElementById(\\'' + callbackID + '\\').onerror();'\n\t\t\t});\n\t\t\tscript.async = false;\n\t\t}\n\n\t\t// Add timeout\n\t\tif (timeout) {\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tresult = error('timeout', 'timeout');\n\t\t\t\tcb();\n\t\t\t}, timeout);\n\t\t}\n\n\t\t// TODO: add fix for IE,\n\t\t// However: unable recreate the bug of firing off the onreadystatechange before the script content has been executed and the value of \"result\" has been defined.\n\t\t// Inject script tag into the head element\n\t\thead.appendChild(script);\n\n\t\t// Append Opera Fix to run after our script\n\t\tif (operaFix) {\n\t\t\thead.appendChild(operaFix);\n\t\t}\n\t},\n\n\t// Post\n\t// Send information to a remote location using the post mechanism\n\t// @param string uri path\n\t// @param object data, key value data to send\n\t// @param function callback, function to execute in response\n\tpost: function(url, data, options, callback, callbackID, timeout) {\n\n\t\tvar _this = this;\n\t\tvar error = _this.error;\n\t\tvar doc = document;\n\n\t\t// This hack needs a form\n\t\tvar form = null;\n\t\tvar reenableAfterSubmit = [];\n\t\tvar newform;\n\t\tvar i = 0;\n\t\tvar x = null;\n\t\tvar bool = 0;\n\t\tvar cb = function(r) {\n\t\t\tif (!(bool++)) {\n\t\t\t\tcallback(r);\n\t\t\t}\n\t\t};\n\n\t\t// What is the name of the callback to contain\n\t\t// We'll also use this to name the iframe\n\t\t_this.globalEvent(cb, callbackID);\n\n\t\t// Build the iframe window\n\t\tvar win;\n\t\ttry {\n\t\t\t// IE7 hack, only lets us define the name here, not later.\n\t\t\twin = doc.createElement('<iframe name=\"' + callbackID + '\">');\n\t\t}\n\t\tcatch (e) {\n\t\t\twin = doc.createElement('iframe');\n\t\t}\n\n\t\twin.name = callbackID;\n\t\twin.id = callbackID;\n\t\twin.style.display = 'none';\n\n\t\t// Override callback mechanism. Triggger a response onload/onerror\n\t\tif (options && options.callbackonload) {\n\t\t\t// Onload is being fired twice\n\t\t\twin.onload = function() {\n\t\t\t\tcb({\n\t\t\t\t\tresponse: 'posted',\n\t\t\t\t\tmessage: 'Content was posted'\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tif (timeout) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tcb(error('timeout', 'The post operation timed out'));\n\t\t\t}, timeout);\n\t\t}\n\n\t\tdoc.body.appendChild(win);\n\n\t\t// If we are just posting a single item\n\t\tif (_this.domInstance('form', data)) {\n\t\t\t// Get the parent form\n\t\t\tform = data.form;\n\n\t\t\t// Loop through and disable all of its siblings\n\t\t\tfor (i = 0; i < form.elements.length; i++) {\n\t\t\t\tif (form.elements[i] !== data) {\n\t\t\t\t\tform.elements[i].setAttribute('disabled', true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move the focus to the form\n\t\t\tdata = form;\n\t\t}\n\n\t\t// Posting a form\n\t\tif (_this.domInstance('form', data)) {\n\t\t\t// This is a form element\n\t\t\tform = data;\n\n\t\t\t// Does this form need to be a multipart form?\n\t\t\tfor (i = 0; i < form.elements.length; i++) {\n\t\t\t\tif (!form.elements[i].disabled && form.elements[i].type === 'file') {\n\t\t\t\t\tform.encoding = form.enctype = 'multipart/form-data';\n\t\t\t\t\tform.elements[i].setAttribute('name', 'file');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Its not a form element,\n\t\t\t// Therefore it must be a JSON object of Key=>Value or Key=>Element\n\t\t\t// If anyone of those values are a input type=file we shall shall insert its siblings into the form for which it belongs.\n\t\t\tfor (x in data) if (data.hasOwnProperty(x)) {\n\t\t\t\t// Is this an input Element?\n\t\t\t\tif (_this.domInstance('input', data[x]) && data[x].type === 'file') {\n\t\t\t\t\tform = data[x].form;\n\t\t\t\t\tform.encoding = form.enctype = 'multipart/form-data';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Do If there is no defined form element, lets create one.\n\t\t\tif (!form) {\n\t\t\t\t// Build form\n\t\t\t\tform = doc.createElement('form');\n\t\t\t\tdoc.body.appendChild(form);\n\t\t\t\tnewform = form;\n\t\t\t}\n\n\t\t\tvar input;\n\n\t\t\t// Add elements to the form if they dont exist\n\t\t\tfor (x in data) if (data.hasOwnProperty(x)) {\n\n\t\t\t\t// Is this an element?\n\t\t\t\tvar el = (_this.domInstance('input', data[x]) || _this.domInstance('textArea', data[x]) || _this.domInstance('select', data[x]));\n\n\t\t\t\t// Is this not an input element, or one that exists outside the form.\n\t\t\t\tif (!el || data[x].form !== form) {\n\n\t\t\t\t\t// Does an element have the same name?\n\t\t\t\t\tvar inputs = form.elements[x];\n\t\t\t\t\tif (input) {\n\t\t\t\t\t\t// Remove it.\n\t\t\t\t\t\tif (!(inputs instanceof NodeList)) {\n\t\t\t\t\t\t\tinputs = [inputs];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (i = 0; i < inputs.length; i++) {\n\t\t\t\t\t\t\tinputs[i].parentNode.removeChild(inputs[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create an input element\n\t\t\t\t\tinput = doc.createElement('input');\n\t\t\t\t\tinput.setAttribute('type', 'hidden');\n\t\t\t\t\tinput.setAttribute('name', x);\n\n\t\t\t\t\t// Does it have a value attribute?\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tinput.value = data[x].value;\n\t\t\t\t\t}\n\t\t\t\t\telse if (_this.domInstance(null, data[x])) {\n\t\t\t\t\t\tinput.value = data[x].innerHTML || data[x].innerText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinput.value = data[x];\n\t\t\t\t\t}\n\n\t\t\t\t\tform.appendChild(input);\n\t\t\t\t}\n\n\t\t\t\t// It is an element, which exists within the form, but the name is wrong\n\t\t\t\telse if (el && data[x].name !== x) {\n\t\t\t\t\tdata[x].setAttribute('name', x);\n\t\t\t\t\tdata[x].name = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Disable elements from within the form if they weren't specified\n\t\t\tfor (i = 0; i < form.elements.length; i++) {\n\n\t\t\t\tinput = form.elements[i];\n\n\t\t\t\t// Does the same name and value exist in the parent\n\t\t\t\tif (!(input.name in data) && input.getAttribute('disabled') !== true) {\n\t\t\t\t\t// Disable\n\t\t\t\t\tinput.setAttribute('disabled', true);\n\n\t\t\t\t\t// Add re-enable to callback\n\t\t\t\t\treenableAfterSubmit.push(input);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set the target of the form\n\t\tform.setAttribute('method', 'POST');\n\t\tform.setAttribute('target', callbackID);\n\t\tform.target = callbackID;\n\n\t\t// Update the form URL\n\t\tform.setAttribute('action', url);\n\n\t\t// Submit the form\n\t\t// Some reason this needs to be offset from the current window execution\n\t\tsetTimeout(function() {\n\t\t\tform.submit();\n\n\t\t\tsetTimeout(function() {\n\t\t\t\ttry {\n\t\t\t\t\t// Remove the iframe from the page.\n\t\t\t\t\t//win.parentNode.removeChild(win);\n\t\t\t\t\t// Remove the form\n\t\t\t\t\tif (newform) {\n\t\t\t\t\t\tnewform.parentNode.removeChild(newform);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconsole.error('HelloJS: could not remove iframe');\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ee) {}\n\t\t\t\t}\n\n\t\t\t\t// Reenable the disabled form\n\t\t\t\tfor (var i = 0; i < reenableAfterSubmit.length; i++) {\n\t\t\t\t\tif (reenableAfterSubmit[i]) {\n\t\t\t\t\t\treenableAfterSubmit[i].setAttribute('disabled', false);\n\t\t\t\t\t\treenableAfterSubmit[i].disabled = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}, 100);\n\t},\n\n\t// Some of the providers require that only multipart is used with non-binary forms.\n\t// This function checks whether the form contains binary data\n\thasBinary: function(data) {\n\t\tfor (var x in data) if (data.hasOwnProperty(x)) {\n\t\t\tif (this.isBinary(data[x])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// Determines if a variable Either Is or like a FormInput has the value of a Blob\n\n\tisBinary: function(data) {\n\n\t\treturn data instanceof Object && (\n\t\t(this.domInstance('input', data) && data.type === 'file') ||\n\t\t('FileList' in window && data instanceof window.FileList) ||\n\t\t('File' in window && data instanceof window.File) ||\n\t\t('Blob' in window && data instanceof window.Blob));\n\n\t},\n\n\t// Convert Data-URI to Blob string\n\ttoBlob: function(dataURI) {\n\t\tvar reg = /^data\\:([^;,]+(\\;charset=[^;,]+)?)(\\;base64)?,/i;\n\t\tvar m = dataURI.match(reg);\n\t\tif (!m) {\n\t\t\treturn dataURI;\n\t\t}\n\n\t\tvar binary = atob(dataURI.replace(reg, ''));\n\t\tvar array = [];\n\t\tfor (var i = 0; i < binary.length; i++) {\n\t\t\tarray.push(binary.charCodeAt(i));\n\t\t}\n\n\t\treturn new Blob([new Uint8Array(array)], {type: m[1]});\n\t}\n\n});\n\n// EXTRA: Convert FormElement to JSON for POSTing\n// Wrappers to add additional functionality to existing functions\n(function(hello) {\n\n\t// Copy original function\n\tvar api = hello.api;\n\tvar utils = hello.utils;\n\n\tutils.extend(utils, {\n\n\t\t// DataToJSON\n\t\t// This takes a FormElement|NodeList|InputElement|MixedObjects and convers the data object to JSON.\n\t\tdataToJSON: function(p) {\n\n\t\t\tvar _this = this;\n\t\t\tvar w = window;\n\t\t\tvar data = p.data;\n\n\t\t\t// Is data a form object\n\t\t\tif (_this.domInstance('form', data)) {\n\t\t\t\tdata = _this.nodeListToJSON(data.elements);\n\t\t\t}\n\t\t\telse if ('NodeList' in w && data instanceof NodeList) {\n\t\t\t\tdata = _this.nodeListToJSON(data);\n\t\t\t}\n\t\t\telse if (_this.domInstance('input', data)) {\n\t\t\t\tdata = _this.nodeListToJSON([data]);\n\t\t\t}\n\n\t\t\t// Is data a blob, File, FileList?\n\t\t\tif (('File' in w && data instanceof w.File) ||\n\t\t\t\t('Blob' in w && data instanceof w.Blob) ||\n\t\t\t\t('FileList' in w && data instanceof w.FileList)) {\n\t\t\t\tdata = {file: data};\n\t\t\t}\n\n\t\t\t// Loop through data if it's not form data it must now be a JSON object\n\t\t\tif (!('FormData' in w && data instanceof w.FormData)) {\n\n\t\t\t\tfor (var x in data) if (data.hasOwnProperty(x)) {\n\n\t\t\t\t\tif ('FileList' in w && data[x] instanceof w.FileList) {\n\t\t\t\t\t\tif (data[x].length === 1) {\n\t\t\t\t\t\t\tdata[x] = data[x][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (_this.domInstance('input', data[x]) && data[x].type === 'file') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (_this.domInstance('input', data[x]) ||\n\t\t\t\t\t\t_this.domInstance('select', data[x]) ||\n\t\t\t\t\t\t_this.domInstance('textArea', data[x])) {\n\t\t\t\t\t\tdata[x] = data[x].value;\n\t\t\t\t\t}\n\t\t\t\t\telse if (_this.domInstance(null, data[x])) {\n\t\t\t\t\t\tdata[x] = data[x].innerHTML || data[x].innerText;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp.data = data;\n\t\t\treturn data;\n\t\t},\n\n\t\t// NodeListToJSON\n\t\t// Given a list of elements extrapolate their values and return as a json object\n\t\tnodeListToJSON: function(nodelist) {\n\n\t\t\tvar json = {};\n\n\t\t\t// Create a data string\n\t\t\tfor (var i = 0; i < nodelist.length; i++) {\n\n\t\t\t\tvar input = nodelist[i];\n\n\t\t\t\t// If the name of the input is empty or diabled, dont add it.\n\t\t\t\tif (input.disabled || !input.name) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Is this a file, does the browser not support 'files' and 'FormData'?\n\t\t\t\tif (input.type === 'file') {\n\t\t\t\t\tjson[input.name] = input;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjson[input.name] = input.value || input.innerHTML;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\t});\n\n\t// Replace it\n\thello.api = function() {\n\n\t\t// Get arguments\n\t\tvar p = utils.args({path: 's!', method: 's', data:'o', timeout: 'i', callback: 'f'}, arguments);\n\n\t\t// Change for into a data object\n\t\tif (p.data) {\n\t\t\tutils.dataToJSON(p);\n\t\t}\n\n\t\treturn api.call(this, p);\n\t};\n\n})(hello);\n\n/////////////////////////////////////\n//\n// Save any access token that is in the current page URL\n// Handle any response solicited through iframe hash tag following an API request\n//\n/////////////////////////////////////\n\nhello.utils.responseHandler(window, window.opener || window.parent);\n\n// Script to support ChromeApps\n// This overides the hello.utils.popup method to support chrome.identity.launchWebAuthFlow\n// See https://developer.chrome.com/apps/app_identity#non\n\n// Is this a chrome app?\n\nif (typeof chrome === 'object' && typeof chrome.identity === 'object' && chrome.identity.launchWebAuthFlow) {\n\n\t(function() {\n\n\t\t// Swap the popup method\n\t\thello.utils.popup = function(url) {\n\n\t\t\treturn _open(url, true);\n\n\t\t};\n\n\t\t// Swap the hidden iframe method\n\t\thello.utils.iframe = function(url) {\n\n\t\t\t_open(url, false);\n\n\t\t};\n\n\t\t// Swap the request_cors method\n\t\thello.utils.request_cors = function(callback) {\n\n\t\t\tcallback();\n\n\t\t\t// Always run as CORS\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Swap the storage method\n\t\tvar _cache = {};\n\t\tchrome.storage.local.get('hello', function(r) {\n\t\t\t// Update the cache\n\t\t\t_cache = r.hello || {};\n\t\t});\n\n\t\thello.utils.store = function(name, value) {\n\n\t\t\t// Get all\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn _cache;\n\t\t\t}\n\n\t\t\t// Get\n\t\t\tif (arguments.length === 1) {\n\t\t\t\treturn _cache[name] || null;\n\t\t\t}\n\n\t\t\t// Set\n\t\t\tif (value) {\n\t\t\t\t_cache[name] = value;\n\t\t\t\tchrome.storage.local.set({hello: _cache});\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\t// Delete\n\t\t\tif (value === null) {\n\t\t\t\tdelete _cache[name];\n\t\t\t\tchrome.storage.local.set({hello: _cache});\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\t// Open function\n\t\tfunction _open(url, interactive) {\n\n\t\t\t// Launch\n\t\t\tvar ref = {\n\t\t\t\tclosed: false\n\t\t\t};\n\n\t\t\t// Launch the webAuthFlow\n\t\t\tchrome.identity.launchWebAuthFlow({\n\t\t\t\turl: url,\n\t\t\t\tinteractive: interactive\n\t\t\t}, function(responseUrl) {\n\n\t\t\t\t// Did the user cancel this prematurely\n\t\t\t\tif (responseUrl === undefined) {\n\t\t\t\t\tref.closed = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Split appart the URL\n\t\t\t\tvar a = hello.utils.url(responseUrl);\n\n\t\t\t\t// The location can be augmented in to a location object like so...\n\t\t\t\t// We dont have window operations on the popup so lets create some\n\t\t\t\tvar _popup = {\n\t\t\t\t\tlocation: {\n\n\t\t\t\t\t\t// Change the location of the popup\n\t\t\t\t\t\tassign: function(url) {\n\n\t\t\t\t\t\t\t// If there is a secondary reassign\n\t\t\t\t\t\t\t// In the case of OAuth1\n\t\t\t\t\t\t\t// Trigger this in non-interactive mode.\n\t\t\t\t\t\t\t_open(url, false);\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tsearch: a.search,\n\t\t\t\t\t\thash: a.hash,\n\t\t\t\t\t\thref: a.href\n\t\t\t\t\t},\n\t\t\t\t\tclose: function() {}\n\t\t\t\t};\n\n\t\t\t\t// Then this URL contains information which HelloJS must process\n\t\t\t\t// URL string\n\t\t\t\t// Window - any action such as window relocation goes here\n\t\t\t\t// Opener - the parent window which opened this, aka this script\n\n\t\t\t\thello.utils.responseHandler(_popup, window);\n\t\t\t});\n\n\t\t\t// Return the reference\n\t\t\treturn ref;\n\t\t}\n\n\t})();\n}\n\n// Phonegap override for hello.phonegap.js\n(function() {\n\n\t// Is this a phonegap implementation?\n\tif (!(/^file:\\/{3}[^\\/]/.test(window.location.href) && window.cordova)) {\n\t\t// Cordova is not included.\n\t\treturn;\n\t}\n\n\t// Augment the hidden iframe method\n\thello.utils.iframe = function(url, redirectUri) {\n\t\thello.utils.popup(url, redirectUri, {hidden: 'yes'});\n\t};\n\n\t// Augment the popup\n\tvar utilPopup = hello.utils.popup;\n\n\t// Replace popup\n\thello.utils.popup = function(url, redirectUri, options) {\n\n\t\t// Run the standard\n\t\tvar popup = utilPopup.call(this, url, redirectUri, options);\n\n\t\t// Create a function for reopening the popup, and assigning events to the new popup object\n\t\t// PhoneGap support\n\t\t// Add an event listener to listen to the change in the popup windows URL\n\t\t// This must appear before popup.focus();\n\t\ttry {\n\t\t\tif (popup && popup.addEventListener) {\n\n\t\t\t\t// Get the origin of the redirect URI\n\n\t\t\t\tvar a = hello.utils.url(redirectUri);\n\t\t\t\tvar redirectUriOrigin = a.origin || (a.protocol + '//' + a.hostname);\n\n\t\t\t\t// Listen to changes in the InAppBrowser window\n\n\t\t\t\tpopup.addEventListener('loadstart', function(e) {\n\n\t\t\t\t\tvar url = e.url;\n\n\t\t\t\t\t// Is this the path, as given by the redirectUri?\n\t\t\t\t\t// Check the new URL agains the redirectUriOrigin.\n\t\t\t\t\t// According to #63 a user could click 'cancel' in some dialog boxes ....\n\t\t\t\t\t// The popup redirects to another page with the same origin, yet we still wish it to close.\n\n\t\t\t\t\tif (url.indexOf(redirectUriOrigin) !== 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Split appart the URL\n\t\t\t\t\tvar a = hello.utils.url(url);\n\n\t\t\t\t\t// We dont have window operations on the popup so lets create some\n\t\t\t\t\t// The location can be augmented in to a location object like so...\n\n\t\t\t\t\tvar _popup = {\n\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\t// Change the location of the popup\n\t\t\t\t\t\t\tassign: function(location) {\n\n\t\t\t\t\t\t\t\t// Unfourtunatly an app is may not change the location of a InAppBrowser window.\n\t\t\t\t\t\t\t\t// So to shim this, just open a new one.\n\t\t\t\t\t\t\t\tpopup.executeScript({code: 'window.location.href = \"' + location + ';\"'});\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tsearch: a.search,\n\t\t\t\t\t\t\thash: a.hash,\n\t\t\t\t\t\t\thref: a.href\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclose: function() {\n\t\t\t\t\t\t\tif (popup.close) {\n\t\t\t\t\t\t\t\tpopup.close();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tpopup.closed = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch (_e) {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Then this URL contains information which HelloJS must process\n\t\t\t\t\t// URL string\n\t\t\t\t\t// Window - any action such as window relocation goes here\n\t\t\t\t\t// Opener - the parent window which opened this, aka this script\n\n\t\t\t\t\thello.utils.responseHandler(_popup, window);\n\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tcatch (e) {}\n\n\t\treturn popup;\n\t};\n\n})();\n\n(function(hello) {\n\n\t// OAuth1\n\tvar OAuth1Settings = {\n\t\tversion: '1.0',\n\t\tauth: 'https://www.dropbox.com/1/oauth/authorize',\n\t\trequest: 'https://api.dropbox.com/1/oauth/request_token',\n\t\ttoken: 'https://api.dropbox.com/1/oauth/access_token'\n\t};\n\n\t// OAuth2 Settings\n\tvar OAuth2Settings = {\n\t\tversion: 2,\n\t\tauth: 'https://www.dropbox.com/1/oauth2/authorize',\n\t\tgrant: 'https://api.dropbox.com/1/oauth2/token'\n\t};\n\n\t// Initiate the Dropbox module\n\thello.init({\n\n\t\tdropbox: {\n\n\t\t\tname: 'Dropbox',\n\n\t\t\toauth: OAuth2Settings,\n\n\t\t\tlogin: function(p) {\n\t\t\t\t// OAuth2 non-standard adjustments\n\t\t\t\tp.qs.scope = '';\n\n\t\t\t\t// Should this be run as OAuth1?\n\t\t\t\t// If the redirect_uri is is HTTP (non-secure) then its required to revert to the OAuth1 endpoints\n\t\t\t\tvar redirect = decodeURIComponent(p.qs.redirect_uri);\n\t\t\t\tif (redirect.indexOf('http:') === 0 && redirect.indexOf('http://localhost/') !== 0) {\n\n\t\t\t\t\t// Override the dropbox OAuth settings.\n\t\t\t\t\thello.services.dropbox.oauth = OAuth1Settings;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Override the dropbox OAuth settings.\n\t\t\t\t\thello.services.dropbox.oauth = OAuth2Settings;\n\t\t\t\t}\n\n\t\t\t\t// The dropbox login window is a different size\n\t\t\t\tp.options.popup.width = 1000;\n\t\t\t\tp.options.popup.height = 1000;\n\t\t\t},\n\n\t\t\t/*\n\t\t\t\tDropbox does not allow insecure HTTP URI's in the redirect_uri field\n\t\t\t\t...otherwise I'd love to use OAuth2\n\n\t\t\t\tFollow request https://forums.dropbox.com/topic.php?id=106505\n\n\t\t\t\tp.qs.response_type = 'code';\n\t\t\t\toauth: {\n\t\t\t\t\tversion: 2,\n\t\t\t\t\tauth: 'https://www.dropbox.com/1/oauth2/authorize',\n\t\t\t\t\tgrant: 'https://api.dropbox.com/1/oauth2/token'\n\t\t\t\t}\n\t\t\t*/\n\n\t\t\t// API Base URL\n\t\t\tbase: 'https://api.dropbox.com/1/',\n\n\t\t\t// Bespoke setting: this is states whether to use the custom environment of Dropbox or to use their own environment\n\t\t\t// Because it's notoriously difficult for Dropbox too provide access from other webservices, this defaults to Sandbox\n\t\t\troot: 'sandbox',\n\n\t\t\t// Map GET requests\n\t\t\tget: {\n\t\t\t\tme: 'account/info',\n\n\t\t\t\t// Https://www.dropbox.com/developers/core/docs#metadata\n\t\t\t\t'me/files': req('metadata/auto/@{parent|}'),\n\t\t\t\t'me/folder': req('metadata/auto/@{id}'),\n\t\t\t\t'me/folders': req('metadata/auto/'),\n\n\t\t\t\t'default': function(p, callback) {\n\t\t\t\t\tif (p.path.match('https://api-content.dropbox.com/1/files/')) {\n\t\t\t\t\t\t// This is a file, return binary data\n\t\t\t\t\t\tp.method = 'blob';\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(p.path);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpost: {\n\t\t\t\t'me/files': function(p, callback) {\n\n\t\t\t\t\tvar path = p.data.parent;\n\t\t\t\t\tvar fileName = p.data.name;\n\n\t\t\t\t\tp.data = {\n\t\t\t\t\t\tfile: p.data.file\n\t\t\t\t\t};\n\n\t\t\t\t\t// Does this have a data-uri to upload as a file?\n\t\t\t\t\tif (typeof (p.data.file) === 'string') {\n\t\t\t\t\t\tp.data.file = hello.utils.toBlob(p.data.file);\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('https://api-content.dropbox.com/1/files_put/auto/' + path + '/' + fileName);\n\t\t\t\t},\n\n\t\t\t\t'me/folders': function(p, callback) {\n\n\t\t\t\t\tvar name = p.data.name;\n\t\t\t\t\tp.data = {};\n\n\t\t\t\t\tcallback('fileops/create_folder?root=@{root|sandbox}&' + hello.utils.param({\n\t\t\t\t\t\tpath: name\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Map DELETE requests\n\t\t\tdel: {\n\t\t\t\t'me/files': 'fileops/delete?root=@{root|sandbox}&path=@{id}',\n\t\t\t\t'me/folder': 'fileops/delete?root=@{root|sandbox}&path=@{id}'\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\tif (!o.uid) {\n\t\t\t\t\t\treturn o;\n\t\t\t\t\t}\n\n\t\t\t\t\to.name = o.display_name;\n\t\t\t\t\tvar m = o.name.split(' ');\n\t\t\t\t\to.first_name = m.shift();\n\t\t\t\t\to.last_name = m.join(' ');\n\t\t\t\t\to.id = o.uid;\n\t\t\t\t\tdelete o.uid;\n\t\t\t\t\tdelete o.display_name;\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'default': function(o, headers, req) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\tif (o.is_dir && o.contents) {\n\t\t\t\t\t\to.data = o.contents;\n\t\t\t\t\t\tdelete o.contents;\n\n\t\t\t\t\t\to.data.forEach(function(item) {\n\t\t\t\t\t\t\titem.root = o.root;\n\t\t\t\t\t\t\tformatFile(item, headers, req);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tformatFile(o, headers, req);\n\n\t\t\t\t\tif (o.is_deleted) {\n\t\t\t\t\t\to.success = true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Doesn't return the CORS headers\n\t\t\txhr: function(p) {\n\n\t\t\t\t// The proxy supports allow-cross-origin-resource\n\t\t\t\t// Alas that's the only thing we're using.\n\t\t\t\tif (p.data && p.data.file) {\n\t\t\t\t\tvar file = p.data.file;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tif (file.files) {\n\t\t\t\t\t\t\tp.data = file.files[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tp.data = file;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (p.method === 'delete') {\n\t\t\t\t\tp.method = 'post';\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tform: function(p, qs) {\n\t\t\t\tdelete qs.state;\n\t\t\t\tdelete qs.redirect_uri;\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction formatError(o) {\n\t\tif (o && 'error' in o) {\n\t\t\to.error = {\n\t\t\t\tcode: 'server_error',\n\t\t\t\tmessage: o.error.message || o.error\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction formatFile(o, headers, req) {\n\n\t\tif (typeof o !== 'object' ||\n\t\t\t(typeof Blob !== 'undefined' && o instanceof Blob) ||\n\t\t\t(typeof ArrayBuffer !== 'undefined' && o instanceof ArrayBuffer)) {\n\t\t\t// This is a file, let it through unformatted\n\t\t\treturn;\n\t\t}\n\n\t\tif ('error' in o) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar path = (o.root !== 'app_folder' ? o.root : '') + o.path.replace(/\\&/g, '%26');\n\t\tpath = path.replace(/^\\//, '');\n\t\tif (o.thumb_exists) {\n\t\t\to.thumbnail = req.oauth_proxy + '?path=' +\n\t\t\tencodeURIComponent('https://api-content.dropbox.com/1/thumbnails/auto/' + path + '?format=jpeg&size=m') + '&access_token=' + req.options.access_token;\n\t\t}\n\n\t\to.type = (o.is_dir ? 'folder' : o.mime_type);\n\t\to.name = o.path.replace(/.*\\//g, '');\n\t\tif (o.is_dir) {\n\t\t\to.files = path.replace(/^\\//, '');\n\t\t}\n\t\telse {\n\t\t\to.downloadLink = hello.settings.oauth_proxy + '?path=' +\n\t\t\tencodeURIComponent('https://api-content.dropbox.com/1/files/auto/' + path) + '&access_token=' + req.options.access_token;\n\t\t\to.file = 'https://api-content.dropbox.com/1/files/auto/' + path;\n\t\t}\n\n\t\tif (!o.id) {\n\t\t\to.id = o.path.replace(/^\\//, '');\n\t\t}\n\n\t\t// O.media = 'https://api-content.dropbox.com/1/files/' + path;\n\t}\n\n\tfunction req(str) {\n\t\treturn function(p, cb) {\n\t\t\tdelete p.query.limit;\n\t\t\tcb(str);\n\t\t};\n\t}\n\n})(hello);\n\n(function(hello) {\n\t// For APIs, once a version is no longer usable, any calls made to it will be defaulted to the next oldest usable version.\n\t// So we explicitly state it.\n\tvar version = 'v2.9';\n\n\thello.init({\n\n\t\tfacebook: {\n\n\t\t\tname: 'Facebook',\n\n\t\t\t// SEE https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://www.facebook.com/' + version + '/dialog/oauth/',\n\t\t\t\tgrant: 'https://graph.facebook.com/oauth/access_token'\n\t\t\t},\n\n\t\t\t// Authorization scopes\n\t\t\tscope: {\n\t\t\t\tbasic: 'public_profile',\n\t\t\t\temail: 'email',\n\t\t\t\tshare: 'user_posts',\n\t\t\t\tbirthday: 'user_birthday',\n\t\t\t\tevents: 'user_events',\n\t\t\t\tphotos: 'user_photos',\n\t\t\t\tvideos: 'user_videos',\n\t\t\t\tfriends: 'user_friends',\n\t\t\t\tfiles: 'user_photos,user_videos',\n\t\t\t\tpublish_files: 'user_photos,user_videos,publish_actions',\n\t\t\t\tpublish: 'publish_actions',\n\n\t\t\t\t// Deprecated in v2.0\n\t\t\t\t// Create_event\t: 'create_event',\n\n\t\t\t\toffline_access: ''\n\t\t\t},\n\n\t\t\t// Refresh the access_token\n\t\t\trefresh: false,\n\n\t\t\tlogin: function(p) {\n\n\t\t\t\t// Reauthenticate\n\t\t\t\t// https://developers.facebook.com/docs/facebook-login/reauthentication\n\t\t\t\tif (p.options.force) {\n\t\t\t\t\tp.qs.auth_type = 'reauthenticate';\n\t\t\t\t}\n\n\t\t\t\t// Set the display value\n\t\t\t\tp.qs.display = p.options.display || 'popup';\n\t\t\t},\n\n\t\t\tlogout: function(callback, options) {\n\t\t\t\t// Assign callback to a global handler\n\t\t\t\tvar callbackID = hello.utils.globalEvent(callback);\n\t\t\t\tvar redirect = encodeURIComponent(hello.settings.redirect_uri + '?' + hello.utils.param({callback:callbackID, result: JSON.stringify({force:true}), state: '{}'}));\n\t\t\t\tvar token = (options.authResponse || {}).access_token;\n\t\t\t\thello.utils.iframe('https://www.facebook.com/logout.php?next=' + redirect + '&access_token=' + token);\n\n\t\t\t\t// Possible responses:\n\t\t\t\t// String URL\t- hello.logout should handle the logout\n\t\t\t\t// Undefined\t- this function will handle the callback\n\t\t\t\t// True - throw a success, this callback isn't handling the callback\n\t\t\t\t// False - throw a error\n\t\t\t\tif (!token) {\n\t\t\t\t\t// If there isn't a token, the above wont return a response, so lets trigger a response\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// API Base URL\n\t\t\tbase: 'https://graph.facebook.com/' + version + '/',\n\n\t\t\t// Map GET requests\n\t\t\tget: {\n\t\t\t\tme: 'me?fields=email,first_name,last_name,name,timezone,verified',\n\t\t\t\t'me/friends': 'me/friends',\n\t\t\t\t'me/following': 'me/friends',\n\t\t\t\t'me/followers': 'me/friends',\n\t\t\t\t'me/share': 'me/feed',\n\t\t\t\t'me/like': 'me/likes',\n\t\t\t\t'me/files': 'me/albums',\n\t\t\t\t'me/albums': 'me/albums?fields=cover_photo,name',\n\t\t\t\t'me/album': '@{id}/photos?fields=picture',\n\t\t\t\t'me/photos': 'me/photos',\n\t\t\t\t'me/photo': '@{id}',\n\t\t\t\t'friend/albums': '@{id}/albums',\n\t\t\t\t'friend/photos': '@{id}/photos'\n\n\t\t\t\t// Pagination\n\t\t\t\t// Https://developers.facebook.com/docs/reference/api/pagination/\n\t\t\t},\n\n\t\t\t// Map POST requests\n\t\t\tpost: {\n\t\t\t\t'me/share': 'me/feed',\n\t\t\t\t'me/photo': '@{id}'\n\n\t\t\t\t// Https://developers.facebook.com/docs/graph-api/reference/v2.2/object/likes/\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: formatUser,\n\t\t\t\t'me/friends': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\t\t\t\t'me/followers': formatFriends,\n\t\t\t\t'me/albums': format,\n\t\t\t\t'me/photos': format,\n\t\t\t\t'me/files': format,\n\t\t\t\t'default': format\n\t\t\t},\n\n\t\t\t// Special requirements for handling XHR\n\t\t\txhr: function(p, qs) {\n\t\t\t\tif (p.method === 'get' || p.method === 'post') {\n\t\t\t\t\tqs.suppress_response_codes = true;\n\t\t\t\t}\n\n\t\t\t\t// Is this a post with a data-uri?\n\t\t\t\tif (p.method === 'post' && p.data && typeof (p.data.file) === 'string') {\n\t\t\t\t\t// Convert the Data-URI to a Blob\n\t\t\t\t\tp.data.file = hello.utils.toBlob(p.data.file);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// Special requirements for handling JSONP fallback\n\t\t\tjsonp: function(p, qs) {\n\t\t\t\tvar m = p.method;\n\t\t\t\tif (m !== 'get' && !hello.utils.hasBinary(p.data)) {\n\t\t\t\t\tp.data.method = m;\n\t\t\t\t\tp.method = 'get';\n\t\t\t\t}\n\t\t\t\telse if (p.method === 'delete') {\n\t\t\t\t\tqs.method = 'delete';\n\t\t\t\t\tp.method = 'post';\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Special requirements for iframe form hack\n\t\t\tform: function(p) {\n\t\t\t\treturn {\n\t\t\t\t\t// Fire the callback onload\n\t\t\t\t\tcallbackonload: true\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n\n\tvar base = 'https://graph.facebook.com/';\n\n\tfunction formatUser(o) {\n\t\tif (o.id) {\n\t\t\to.thumbnail = o.picture = 'https://graph.facebook.com/' + o.id + '/picture';\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriends(o) {\n\t\tif ('data' in o) {\n\t\t\to.data.forEach(formatUser);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction format(o, headers, req) {\n\t\tif (typeof o === 'boolean') {\n\t\t\to = {success: o};\n\t\t}\n\n\t\tif (o && 'data' in o) {\n\t\t\tvar token = req.query.access_token;\n\n\t\t\tif (!(o.data instanceof Array)) {\n\t\t\t\tvar data = o.data;\n\t\t\t\tdelete o.data;\n\t\t\t\to.data = [data];\n\t\t\t}\n\n\t\t\to.data.forEach(function(d) {\n\n\t\t\t\tif (d.picture) {\n\t\t\t\t\td.thumbnail = d.picture;\n\t\t\t\t}\n\n\t\t\t\td.pictures = (d.images || [])\n\t\t\t\t\t.sort(function(a, b) {\n\t\t\t\t\t\treturn a.width - b.width;\n\t\t\t\t\t});\n\n\t\t\t\tif (d.cover_photo && d.cover_photo.id) {\n\t\t\t\t\td.thumbnail = base + d.cover_photo.id + '/picture?access_token=' + token;\n\t\t\t\t}\n\n\t\t\t\tif (d.type === 'album') {\n\t\t\t\t\td.files = d.photos = base + d.id + '/photos';\n\t\t\t\t}\n\n\t\t\t\tif (d.can_upload) {\n\t\t\t\t\td.upload_location = base + d.id + '/photos';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn o;\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\thello.init({\n\n\t\tflickr: {\n\n\t\t\tname: 'Flickr',\n\n\t\t\t// Ensure that you define an oauth_proxy\n\t\t\toauth: {\n\t\t\t\tversion: '1.0a',\n\t\t\t\tauth: 'https://www.flickr.com/services/oauth/authorize?perms=read',\n\t\t\t\trequest: 'https://www.flickr.com/services/oauth/request_token',\n\t\t\t\ttoken: 'https://www.flickr.com/services/oauth/access_token'\n\t\t\t},\n\n\t\t\t// API base URL\n\t\t\tbase: 'https://api.flickr.com/services/rest',\n\n\t\t\t// Map GET resquests\n\t\t\tget: {\n\t\t\t\tme: sign('flickr.people.getInfo'),\n\t\t\t\t'me/friends': sign('flickr.contacts.getList', {per_page:'@{limit|50}'}),\n\t\t\t\t'me/following': sign('flickr.contacts.getList', {per_page:'@{limit|50}'}),\n\t\t\t\t'me/followers': sign('flickr.contacts.getList', {per_page:'@{limit|50}'}),\n\t\t\t\t'me/albums': sign('flickr.photosets.getList', {per_page:'@{limit|50}'}),\n\t\t\t\t'me/album': sign('flickr.photosets.getPhotos', {photoset_id: '@{id}'}),\n\t\t\t\t'me/photos': sign('flickr.people.getPhotos', {per_page:'@{limit|50}'})\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\to = checkResponse(o, 'person');\n\t\t\t\t\tif (o.id) {\n\t\t\t\t\t\tif (o.realname) {\n\t\t\t\t\t\t\to.name = o.realname._content;\n\t\t\t\t\t\t\tvar m = o.name.split(' ');\n\t\t\t\t\t\t\to.first_name = m.shift();\n\t\t\t\t\t\t\to.last_name = m.join(' ');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\to.thumbnail = getBuddyIcon(o, 'l');\n\t\t\t\t\t\to.picture = getBuddyIcon(o, 'l');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'me/friends': formatFriends,\n\t\t\t\t'me/followers': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\t\t\t\t'me/albums': function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\to = checkResponse(o, 'photosets');\n\t\t\t\t\tpaging(o);\n\t\t\t\t\tif (o.photoset) {\n\t\t\t\t\t\to.data = o.photoset;\n\t\t\t\t\t\to.data.forEach(function(item) {\n\t\t\t\t\t\t\titem.name = item.title._content;\n\t\t\t\t\t\t\titem.photos = 'https://api.flickr.com/services/rest' + getApiUrl('flickr.photosets.getPhotos', {photoset_id: item.id}, true);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdelete o.photoset;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'me/photos': function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\treturn formatPhotos(o);\n\t\t\t\t},\n\n\t\t\t\t'default': function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\treturn formatPhotos(o);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\txhr: false,\n\n\t\t\tjsonp: function(p, qs) {\n\t\t\t\tif (p.method == 'get') {\n\t\t\t\t\tdelete qs.callback;\n\t\t\t\t\tqs.jsoncallback = p.callbackID;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getApiUrl(method, extraParams, skipNetwork) {\n\t\tvar url = ((skipNetwork) ? '' : 'flickr:') +\n\t\t\t'?method=' + method +\n\t\t\t'&api_key=' + hello.services.flickr.id +\n\t\t\t'&format=json';\n\t\tfor (var param in extraParams) {\n\t\t\tif (extraParams.hasOwnProperty(param)) {\n\t\t\t\turl += '&' + param + '=' + extraParams[param];\n\t\t\t}\n\t\t}\n\n\t\treturn url;\n\t}\n\n\t// This is not exactly neat but avoid to call\n\t// The method 'flickr.test.login' for each api call\n\n\tfunction withUser(cb) {\n\t\tvar auth = hello.getAuthResponse('flickr');\n\t\tcb(auth && auth.user_nsid ? auth.user_nsid : null);\n\t}\n\n\tfunction sign(url, params) {\n\t\tif (!params) {\n\t\t\tparams = {};\n\t\t}\n\n\t\treturn function(p, callback) {\n\t\t\twithUser(function(userId) {\n\t\t\t\tparams.user_id = userId;\n\t\t\t\tcallback(getApiUrl(url, params, true));\n\t\t\t});\n\t\t};\n\t}\n\n\tfunction getBuddyIcon(profile, size) {\n\t\tvar url = 'https://www.flickr.com/images/buddyicon.gif';\n\t\tif (profile.nsid && profile.iconserver && profile.iconfarm) {\n\t\t\turl = 'https://farm' + profile.iconfarm + '.staticflickr.com/' +\n\t\t\t\tprofile.iconserver + '/' +\n\t\t\t\t'buddyicons/' + profile.nsid +\n\t\t\t\t((size) ? '_' + size : '') + '.jpg';\n\t\t}\n\n\t\treturn url;\n\t}\n\n\t// See: https://www.flickr.com/services/api/misc.urls.html\n\tfunction createPhotoUrl(id, farm, server, secret, size) {\n\t\tsize = (size) ? '_' + size : '';\n\t\treturn 'https://farm' + farm + '.staticflickr.com/' + server + '/' + id + '_' + secret + size + '.jpg';\n\t}\n\n\tfunction formatUser(o) {\n\t}\n\n\tfunction formatError(o) {\n\t\tif (o && o.stat && o.stat.toLowerCase() != 'ok') {\n\t\t\to.error = {\n\t\t\t\tcode: 'invalid_request',\n\t\t\t\tmessage: o.message\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction formatPhotos(o) {\n\t\tif (o.photoset || o.photos) {\n\t\t\tvar set = ('photoset' in o) ? 'photoset' : 'photos';\n\t\t\to = checkResponse(o, set);\n\t\t\tpaging(o);\n\t\t\to.data = o.photo;\n\t\t\tdelete o.photo;\n\t\t\tfor (var i = 0; i < o.data.length; i++) {\n\t\t\t\tvar photo = o.data[i];\n\t\t\t\tphoto.name = photo.title;\n\t\t\t\tphoto.picture = createPhotoUrl(photo.id, photo.farm, photo.server, photo.secret, '');\n\t\t\t\tphoto.pictures = createPictures(photo.id, photo.farm, photo.server, photo.secret);\n\t\t\t\tphoto.source = createPhotoUrl(photo.id, photo.farm, photo.server, photo.secret, 'b');\n\t\t\t\tphoto.thumbnail = createPhotoUrl(photo.id, photo.farm, photo.server, photo.secret, 'm');\n\t\t\t}\n\t\t}\n\n\t\treturn o;\n\t}\n\n\t// See: https://www.flickr.com/services/api/misc.urls.html\n\tfunction createPictures(id, farm, server, secret) {\n\n\t\tvar NO_LIMIT = 2048;\n\t\tvar sizes = [\n\t\t\t{id: 't', max: 100},\n\t\t\t{id: 'm', max: 240},\n\t\t\t{id: 'n', max: 320},\n\t\t\t{id: '', max: 500},\n\t\t\t{id: 'z', max: 640},\n\t\t\t{id: 'c', max: 800},\n\t\t\t{id: 'b', max: 1024},\n\t\t\t{id: 'h', max: 1600},\n\t\t\t{id: 'k', max: 2048},\n\t\t\t{id: 'o', max: NO_LIMIT}\n\t\t];\n\n\t\treturn sizes.map(function(size) {\n\t\t\treturn {\n\t\t\t\tsource: createPhotoUrl(id, farm, server, secret, size.id),\n\n\t\t\t\t// Note: this is a guess that's almost certain to be wrong (unless square source)\n\t\t\t\twidth: size.max,\n\t\t\t\theight: size.max\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction checkResponse(o, key) {\n\n\t\tif (key in o) {\n\t\t\to = o[key];\n\t\t}\n\t\telse if (!('error' in o)) {\n\t\t\to.error = {\n\t\t\t\tcode: 'invalid_request',\n\t\t\t\tmessage: o.message || 'Failed to get data from Flickr'\n\t\t\t};\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriends(o) {\n\t\tformatError(o);\n\t\tif (o.contacts) {\n\t\t\to = checkResponse(o, 'contacts');\n\t\t\tpaging(o);\n\t\t\to.data = o.contact;\n\t\t\tdelete o.contact;\n\t\t\tfor (var i = 0; i < o.data.length; i++) {\n\t\t\t\tvar item = o.data[i];\n\t\t\t\titem.id = item.nsid;\n\t\t\t\titem.name = item.realname || item.username;\n\t\t\t\titem.thumbnail = getBuddyIcon(item, 'm');\n\t\t\t}\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction paging(res) {\n\t\tif (res.page && res.pages && res.page !== res.pages) {\n\t\t\tres.paging = {\n\t\t\t\tnext: '?page=' + (++res.page)\n\t\t\t};\n\t\t}\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\thello.init({\n\n\t\tfoursquare: {\n\n\t\t\tname: 'Foursquare',\n\n\t\t\toauth: {\n\t\t\t\t// See: https://developer.foursquare.com/overview/auth\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://foursquare.com/oauth2/authenticate',\n\t\t\t\tgrant: 'https://foursquare.com/oauth2/access_token'\n\t\t\t},\n\n\t\t\t// Refresh the access_token once expired\n\t\t\trefresh: true,\n\n\t\t\tbase: 'https://api.foursquare.com/v2/',\n\n\t\t\tget: {\n\t\t\t\tme: 'users/self',\n\t\t\t\t'me/friends': 'users/self/friends',\n\t\t\t\t'me/followers': 'users/self/friends',\n\t\t\t\t'me/following': 'users/self/friends'\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\tif (o && o.response) {\n\t\t\t\t\t\to = o.response.user;\n\t\t\t\t\t\tformatUser(o);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'default': function(o) {\n\t\t\t\t\tformatError(o);\n\n\t\t\t\t\t// Format friends\n\t\t\t\t\tif (o && 'response' in o && 'friends' in o.response && 'items' in o.response.friends) {\n\t\t\t\t\t\to.data = o.response.friends.items;\n\t\t\t\t\t\to.data.forEach(formatUser);\n\t\t\t\t\t\tdelete o.response;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\txhr: formatRequest,\n\t\t\tjsonp: formatRequest\n\t\t}\n\t});\n\n\tfunction formatError(o) {\n\t\tif (o.meta && (o.meta.code === 400 || o.meta.code === 401)) {\n\t\t\to.error = {\n\t\t\t\tcode: 'access_denied',\n\t\t\t\tmessage: o.meta.errorDetail\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction formatUser(o) {\n\t\tif (o && o.id) {\n\t\t\to.thumbnail = o.photo.prefix + '100x100' + o.photo.suffix;\n\t\t\to.name = o.firstName + ' ' + o.lastName;\n\t\t\to.first_name = o.firstName;\n\t\t\to.last_name = o.lastName;\n\t\t\tif (o.contact) {\n\t\t\t\tif (o.contact.email) {\n\t\t\t\t\to.email = o.contact.email;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction formatRequest(p, qs) {\n\t\tvar token = qs.access_token;\n\t\tdelete qs.access_token;\n\t\tqs.oauth_token = token;\n\t\tqs.v = 20121125;\n\t\treturn true;\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\thello.init({\n\n\t\tgithub: {\n\n\t\t\tname: 'GitHub',\n\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://github.com/login/oauth/authorize',\n\t\t\t\tgrant: 'https://github.com/login/oauth/access_token',\n\t\t\t\tresponse_type: 'code'\n\t\t\t},\n\n\t\t\tscope: {\n\t\t\t\temail: 'user:email'\n\t\t\t},\n\n\t\t\tbase: 'https://api.github.com/',\n\n\t\t\tget: {\n\t\t\t\tme: 'user',\n\t\t\t\t'me/friends': 'user/following?per_page=@{limit|100}',\n\t\t\t\t'me/following': 'user/following?per_page=@{limit|100}',\n\t\t\t\t'me/followers': 'user/followers?per_page=@{limit|100}',\n\t\t\t\t'me/like': 'user/starred?per_page=@{limit|100}'\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o, headers) {\n\n\t\t\t\t\tformatError(o, headers);\n\t\t\t\t\tformatUser(o);\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'default': function(o, headers, req) {\n\n\t\t\t\t\tformatError(o, headers);\n\n\t\t\t\t\tif (Array.isArray(o)) {\n\t\t\t\t\t\to = {data:o};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (o.data) {\n\t\t\t\t\t\tpaging(o, headers, req);\n\t\t\t\t\t\to.data.forEach(formatUser);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\txhr: function(p) {\n\n\t\t\t\tif (p.method !== 'get' && p.data) {\n\n\t\t\t\t\t// Serialize payload as JSON\n\t\t\t\t\tp.headers = p.headers || {};\n\t\t\t\t\tp.headers['Content-Type'] = 'application/json';\n\t\t\t\t\tif (typeof (p.data) === 'object') {\n\t\t\t\t\t\tp.data = JSON.stringify(p.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction formatError(o, headers) {\n\t\tvar code = headers ? headers.statusCode : (o && 'meta' in o && 'status' in o.meta && o.meta.status);\n\t\tif ((code === 401 || code === 403)) {\n\t\t\to.error = {\n\t\t\t\tcode: 'access_denied',\n\t\t\t\tmessage: o.message || (o.data ? o.data.message : 'Could not get response')\n\t\t\t};\n\t\t\tdelete o.message;\n\t\t}\n\t}\n\n\tfunction formatUser(o) {\n\t\tif (o.id) {\n\t\t\to.thumbnail = o.picture = o.avatar_url;\n\t\t\to.name = o.login;\n\t\t}\n\t}\n\n\tfunction paging(res, headers, req) {\n\t\tif (res.data && res.data.length && headers && headers.Link) {\n\t\t\tvar next = headers.Link.match(/<(.*?)>;\\s*rel=\\\"next\\\"/);\n\t\t\tif (next) {\n\t\t\t\tres.paging = {\n\t\t\t\t\tnext: next[1]\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\tvar contactsUrl = 'https://www.google.com/m8/feeds/contacts/default/full?v=3.0&alt=json&max-results=@{limit|1000}&start-index=@{start|1}';\n\n\thello.init({\n\n\t\tgoogle: {\n\n\t\t\tname: 'Google Plus',\n\n\t\t\t// See: http://code.google.com/apis/accounts/docs/OAuth2UserAgent.html\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://accounts.google.com/o/oauth2/auth',\n\t\t\t\tgrant: 'https://accounts.google.com/o/oauth2/token'\n\t\t\t},\n\n\t\t\t// Authorization scopes\n\t\t\tscope: {\n\t\t\t\tbasic: 'https://www.googleapis.com/auth/plus.me profile',\n\t\t\t\temail: 'email',\n\t\t\t\tbirthday: '',\n\t\t\t\tevents: '',\n\t\t\t\tphotos: 'https://picasaweb.google.com/data/',\n\t\t\t\tvideos: 'http://gdata.youtube.com',\n\t\t\t\tfriends: 'https://www.google.com/m8/feeds, https://www.googleapis.com/auth/plus.login',\n\t\t\t\tfiles: 'https://www.googleapis.com/auth/drive.readonly',\n\t\t\t\tpublish: '',\n\t\t\t\tpublish_files: 'https://www.googleapis.com/auth/drive',\n\t\t\t\tshare: '',\n\t\t\t\tcreate_event: '',\n\t\t\t\toffline_access: ''\n\t\t\t},\n\n\t\t\tscope_delim: ' ',\n\n\t\t\tlogin: function(p) {\n\n\t\t\t\tif (p.qs.response_type === 'code') {\n\n\t\t\t\t\t// Let's set this to an offline access to return a refresh_token\n\t\t\t\t\tp.qs.access_type = 'offline';\n\t\t\t\t}\n\n\t\t\t\t// Reauthenticate\n\t\t\t\t// https://developers.google.com/identity/protocols/\n\t\t\t\tif (p.options.force) {\n\t\t\t\t\tp.qs.approval_prompt = 'force';\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// API base URI\n\t\t\tbase: 'https://www.googleapis.com/',\n\n\t\t\t// Map GET requests\n\t\t\tget: {\n\t\t\t\tme: 'plus/v1/people/me',\n\n\t\t\t\t// Deprecated Sept 1, 2014\n\t\t\t\t//'me': 'oauth2/v1/userinfo?alt=json',\n\n\t\t\t\t// See: https://developers.google.com/+/api/latest/people/list\n\t\t\t\t'me/friends': 'plus/v1/people/me/people/visible?maxResults=@{limit|100}',\n\t\t\t\t'me/following': contactsUrl,\n\t\t\t\t'me/followers': contactsUrl,\n\t\t\t\t'me/contacts': contactsUrl,\n\t\t\t\t'me/share': 'plus/v1/people/me/activities/public?maxResults=@{limit|100}',\n\t\t\t\t'me/feed': 'plus/v1/people/me/activities/public?maxResults=@{limit|100}',\n\t\t\t\t'me/albums': 'https://picasaweb.google.com/data/feed/api/user/default?alt=json&max-results=@{limit|100}&start-index=@{start|1}',\n\t\t\t\t'me/album': function(p, callback) {\n\t\t\t\t\tvar key = p.query.id;\n\t\t\t\t\tdelete p.query.id;\n\t\t\t\t\tcallback(key.replace('/entry/', '/feed/'));\n\t\t\t\t},\n\n\t\t\t\t'me/photos': 'https://picasaweb.google.com/data/feed/api/user/default?alt=json&kind=photo&max-results=@{limit|100}&start-index=@{start|1}',\n\n\t\t\t\t// See: https://developers.google.com/drive/v2/reference/files/list\n\t\t\t\t'me/file': 'drive/v2/files/@{id}',\n\t\t\t\t'me/files': 'drive/v2/files?q=%22@{parent|root}%22+in+parents+and+trashed=false&maxResults=@{limit|100}',\n\n\t\t\t\t// See: https://developers.google.com/drive/v2/reference/files/list\n\t\t\t\t'me/folders': 'drive/v2/files?q=%22@{id|root}%22+in+parents+and+mimeType+=+%22application/vnd.google-apps.folder%22+and+trashed=false&maxResults=@{limit|100}',\n\n\t\t\t\t// See: https://developers.google.com/drive/v2/reference/files/list\n\t\t\t\t'me/folder': 'drive/v2/files?q=%22@{id|root}%22+in+parents+and+trashed=false&maxResults=@{limit|100}'\n\t\t\t},\n\n\t\t\t// Map POST requests\n\t\t\tpost: {\n\n\t\t\t\t// Google Drive\n\t\t\t\t'me/files': uploadDrive,\n\t\t\t\t'me/folders': function(p, callback) {\n\t\t\t\t\tp.data = {\n\t\t\t\t\t\ttitle: p.data.name,\n\t\t\t\t\t\tparents: [{id: p.data.parent || 'root'}],\n\t\t\t\t\t\tmimeType: 'application/vnd.google-apps.folder'\n\t\t\t\t\t};\n\t\t\t\t\tcallback('drive/v2/files');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Map PUT requests\n\t\t\tput: {\n\t\t\t\t'me/files': uploadDrive\n\t\t\t},\n\n\t\t\t// Map DELETE requests\n\t\t\tdel: {\n\t\t\t\t'me/files': 'drive/v2/files/@{id}',\n\t\t\t\t'me/folder': 'drive/v2/files/@{id}'\n\t\t\t},\n\n\t\t\t// Map PATCH requests\n\t\t\tpatch: {\n\t\t\t\t'me/file': 'drive/v2/files/@{id}'\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o) {\n\t\t\t\t\tif (o.id) {\n\t\t\t\t\t\to.last_name = o.family_name || (o.name ? o.name.familyName : null);\n\t\t\t\t\t\to.first_name = o.given_name || (o.name ? o.name.givenName : null);\n\n\t\t\t\t\t\tif (o.emails && o.emails.length) {\n\t\t\t\t\t\t\to.email = o.emails[0].value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tformatPerson(o);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'me/friends': function(o) {\n\t\t\t\t\tif (o.items) {\n\t\t\t\t\t\tpaging(o);\n\t\t\t\t\t\to.data = o.items;\n\t\t\t\t\t\to.data.forEach(formatPerson);\n\t\t\t\t\t\tdelete o.items;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'me/contacts': formatFriends,\n\t\t\t\t'me/followers': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\t\t\t\t'me/share': formatFeed,\n\t\t\t\t'me/feed': formatFeed,\n\t\t\t\t'me/albums': gEntry,\n\t\t\t\t'me/photos': formatPhotos,\n\t\t\t\t'default': gEntry\n\t\t\t},\n\n\t\t\txhr: function(p) {\n\n\t\t\t\tif (p.method === 'post' || p.method === 'put') {\n\t\t\t\t\ttoJSON(p);\n\t\t\t\t}\n\t\t\t\telse if (p.method === 'patch') {\n\t\t\t\t\thello.utils.extend(p.query, p.data);\n\t\t\t\t\tp.data = null;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// Don't even try submitting via form.\n\t\t\t// This means no POST operations in <=IE9\n\t\t\tform: false\n\t\t}\n\t});\n\n\tfunction toInt(s) {\n\t\treturn parseInt(s, 10);\n\t}\n\n\tfunction formatFeed(o) {\n\t\tpaging(o);\n\t\to.data = o.items;\n\t\tdelete o.items;\n\t\treturn o;\n\t}\n\n\t// Format: ensure each record contains a name, id etc.\n\tfunction formatItem(o) {\n\t\tif (o.error) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!o.name) {\n\t\t\to.name = o.title || o.message;\n\t\t}\n\n\t\tif (!o.picture) {\n\t\t\to.picture = o.thumbnailLink;\n\t\t}\n\n\t\tif (!o.thumbnail) {\n\t\t\to.thumbnail = o.thumbnailLink;\n\t\t}\n\n\t\tif (o.mimeType === 'application/vnd.google-apps.folder') {\n\t\t\to.type = 'folder';\n\t\t\to.files = 'https://www.googleapis.com/drive/v2/files?q=%22' + o.id + '%22+in+parents';\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatImage(image) {\n\t\treturn {\n\t\t\tsource: image.url,\n\t\t\twidth: image.width,\n\t\t\theight: image.height\n\t\t};\n\t}\n\n\tfunction formatPhotos(o) {\n\t\to.data = o.feed.entry.map(formatEntry);\n\t\tdelete o.feed;\n\t}\n\n\t// Google has a horrible JSON API\n\tfunction gEntry(o) {\n\t\tpaging(o);\n\n\t\tif ('feed' in o && 'entry' in o.feed) {\n\t\t\to.data = o.feed.entry.map(formatEntry);\n\t\t\tdelete o.feed;\n\t\t}\n\n\t\t// Old style: Picasa, etc.\n\t\telse if ('entry' in o) {\n\t\t\treturn formatEntry(o.entry);\n\t\t}\n\n\t\t// New style: Google Drive & Plus\n\t\telse if ('items' in o) {\n\t\t\to.data = o.items.map(formatItem);\n\t\t\tdelete o.items;\n\t\t}\n\t\telse {\n\t\t\tformatItem(o);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatPerson(o) {\n\t\to.name = o.displayName || o.name;\n\t\to.picture = o.picture || (o.image ? o.image.url : null);\n\t\to.thumbnail = o.picture;\n\t}\n\n\tfunction formatFriends(o, headers, req) {\n\t\tpaging(o);\n\t\tvar r = [];\n\t\tif ('feed' in o && 'entry' in o.feed) {\n\t\t\tvar token = req.query.access_token;\n\t\t\tfor (var i = 0; i < o.feed.entry.length; i++) {\n\t\t\t\tvar a = o.feed.entry[i];\n\n\t\t\t\ta.id\t= a.id.$t;\n\t\t\t\ta.name\t= a.title.$t;\n\t\t\t\tdelete a.title;\n\t\t\t\tif (a.gd$email) {\n\t\t\t\t\ta.email\t= (a.gd$email && a.gd$email.length > 0) ? a.gd$email[0].address : null;\n\t\t\t\t\ta.emails = a.gd$email;\n\t\t\t\t\tdelete a.gd$email;\n\t\t\t\t}\n\n\t\t\t\tif (a.updated) {\n\t\t\t\t\ta.updated = a.updated.$t;\n\t\t\t\t}\n\n\t\t\t\tif (a.link) {\n\n\t\t\t\t\tvar pic = (a.link.length > 0) ? a.link[0].href : null;\n\t\t\t\t\tif (pic && a.link[0].gd$etag) {\n\t\t\t\t\t\tpic += (pic.indexOf('?') > -1 ? '&' : '?') + 'access_token=' + token;\n\t\t\t\t\t\ta.picture = pic;\n\t\t\t\t\t\ta.thumbnail = pic;\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete a.link;\n\t\t\t\t}\n\n\t\t\t\tif (a.category) {\n\t\t\t\t\tdelete a.category;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\to.data = o.feed.entry;\n\t\t\tdelete o.feed;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatEntry(a) {\n\n\t\tvar group = a.media$group;\n\t\tvar photo = group.media$content.length ? group.media$content[0] : {};\n\t\tvar mediaContent = group.media$content || [];\n\t\tvar mediaThumbnail = group.media$thumbnail || [];\n\n\t\tvar pictures = mediaContent\n\t\t\t.concat(mediaThumbnail)\n\t\t\t.map(formatImage)\n\t\t\t.sort(function(a, b) {\n\t\t\t\treturn a.width - b.width;\n\t\t\t});\n\n\t\tvar i = 0;\n\t\tvar _a;\n\t\tvar p = {\n\t\t\tid: a.id.$t,\n\t\t\tname: a.title.$t,\n\t\t\tdescription: a.summary.$t,\n\t\t\tupdated_time: a.updated.$t,\n\t\t\tcreated_time: a.published.$t,\n\t\t\tpicture: photo ? photo.url : null,\n\t\t\tpictures: pictures,\n\t\t\timages: [],\n\t\t\tthumbnail: photo ? photo.url : null,\n\t\t\twidth: photo.width,\n\t\t\theight: photo.height\n\t\t};\n\n\t\t// Get feed/children\n\t\tif ('link' in a) {\n\t\t\tfor (i = 0; i < a.link.length; i++) {\n\t\t\t\tvar d = a.link[i];\n\t\t\t\tif (d.rel.match(/\\#feed$/)) {\n\t\t\t\t\tp.upload_location = p.files = p.photos = d.href;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get images of different scales\n\t\tif ('category' in a && a.category.length) {\n\t\t\t_a = a.category;\n\t\t\tfor (i = 0; i < _a.length; i++) {\n\t\t\t\tif (_a[i].scheme && _a[i].scheme.match(/\\#kind$/)) {\n\t\t\t\t\tp.type = _a[i].term.replace(/^.*?\\#/, '');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get images of different scales\n\t\tif ('media$thumbnail' in group && group.media$thumbnail.length) {\n\t\t\t_a = group.media$thumbnail;\n\t\t\tp.thumbnail = _a[0].url;\n\t\t\tp.images = _a.map(formatImage);\n\t\t}\n\n\t\t_a = group.media$content;\n\n\t\tif (_a && _a.length) {\n\t\t\tp.images.push(formatImage(_a[0]));\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction paging(res) {\n\n\t\t// Contacts V2\n\t\tif ('feed' in res && res.feed.openSearch$itemsPerPage) {\n\t\t\tvar limit = toInt(res.feed.openSearch$itemsPerPage.$t);\n\t\t\tvar start = toInt(res.feed.openSearch$startIndex.$t);\n\t\t\tvar total = toInt(res.feed.openSearch$totalResults.$t);\n\n\t\t\tif ((start + limit) < total) {\n\t\t\t\tres.paging = {\n\t\t\t\t\tnext: '?start=' + (start + limit)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\telse if ('nextPageToken' in res) {\n\t\t\tres.paging = {\n\t\t\t\tnext: '?pageToken=' + res.nextPageToken\n\t\t\t};\n\t\t}\n\t}\n\n\t// Construct a multipart message\n\tfunction Multipart() {\n\n\t\t// Internal body\n\t\tvar body = [];\n\t\tvar boundary = (Math.random() * 1e10).toString(32);\n\t\tvar counter = 0;\n\t\tvar lineBreak = '\\r\\n';\n\t\tvar delim = lineBreak + '--' + boundary;\n\t\tvar ready = function() {};\n\n\t\tvar dataUri = /^data\\:([^;,]+(\\;charset=[^;,]+)?)(\\;base64)?,/i;\n\n\t\t// Add file\n\t\tfunction addFile(item) {\n\t\t\tvar fr = new FileReader();\n\t\t\tfr.onload = function(e) {\n\t\t\t\taddContent(btoa(e.target.result), item.type + lineBreak + 'Content-Transfer-Encoding: base64');\n\t\t\t};\n\n\t\t\tfr.readAsBinaryString(item);\n\t\t}\n\n\t\t// Add content\n\t\tfunction addContent(content, type) {\n\t\t\tbody.push(lineBreak + 'Content-Type: ' + type + lineBreak + lineBreak + content);\n\t\t\tcounter--;\n\t\t\tready();\n\t\t}\n\n\t\t// Add new things to the object\n\t\tthis.append = function(content, type) {\n\n\t\t\t// Does the content have an array\n\t\t\tif (typeof (content) === 'string' || !('length' in Object(content))) {\n\t\t\t\t// Converti to multiples\n\t\t\t\tcontent = [content];\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < content.length; i++) {\n\n\t\t\t\tcounter++;\n\n\t\t\t\tvar item = content[i];\n\n\t\t\t\t// Is this a file?\n\t\t\t\t// Files can be either Blobs or File types\n\t\t\t\tif (\n\t\t\t\t\t(typeof (File) !== 'undefined' && item instanceof File) ||\n\t\t\t\t\t(typeof (Blob) !== 'undefined' && item instanceof Blob)\n\t\t\t\t) {\n\t\t\t\t\t// Read the file in\n\t\t\t\t\taddFile(item);\n\t\t\t\t}\n\n\t\t\t\t// Data-URI?\n\t\t\t\t// Data:[<mime type>][;charset=<charset>][;base64],<encoded data>\n\t\t\t\t// /^data\\:([^;,]+(\\;charset=[^;,]+)?)(\\;base64)?,/i\n\t\t\t\telse if (typeof (item) === 'string' && item.match(dataUri)) {\n\t\t\t\t\tvar m = item.match(dataUri);\n\t\t\t\t\taddContent(item.replace(dataUri, ''), m[1] + lineBreak + 'Content-Transfer-Encoding: base64');\n\t\t\t\t}\n\n\t\t\t\t// Regular string\n\t\t\t\telse {\n\t\t\t\t\taddContent(item, type);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.onready = function(fn) {\n\t\t\tready = function() {\n\t\t\t\tif (counter === 0) {\n\t\t\t\t\t// Trigger ready\n\t\t\t\t\tbody.unshift('');\n\t\t\t\t\tbody.push('--');\n\t\t\t\t\tfn(body.join(delim), boundary);\n\t\t\t\t\tbody = [];\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tready();\n\t\t};\n\t}\n\n\t// Upload to Drive\n\t// If this is PUT then only augment the file uploaded\n\t// PUT https://developers.google.com/drive/v2/reference/files/update\n\t// POST https://developers.google.com/drive/manage-uploads\n\tfunction uploadDrive(p, callback) {\n\n\t\tvar data = {};\n\n\t\t// Test for DOM element\n\t\tif (p.data &&\n\t\t\t(typeof (HTMLInputElement) !== 'undefined' && p.data instanceof HTMLInputElement)\n\t\t) {\n\t\t\tp.data = {file: p.data};\n\t\t}\n\n\t\tif (!p.data.name && Object(Object(p.data.file).files).length && p.method === 'post') {\n\t\t\tp.data.name = p.data.file.files[0].name;\n\t\t}\n\n\t\tif (p.method === 'post') {\n\t\t\tp.data = {\n\t\t\t\ttitle: p.data.name,\n\t\t\t\tparents: [{id: p.data.parent || 'root'}],\n\t\t\t\tfile: p.data.file\n\t\t\t};\n\t\t}\n\t\telse {\n\n\t\t\t// Make a reference\n\t\t\tdata = p.data;\n\t\t\tp.data = {};\n\n\t\t\t// Add the parts to change as required\n\t\t\tif (data.parent) {\n\t\t\t\tp.data.parents = [{id: p.data.parent || 'root'}];\n\t\t\t}\n\n\t\t\tif (data.file) {\n\t\t\t\tp.data.file = data.file;\n\t\t\t}\n\n\t\t\tif (data.name) {\n\t\t\t\tp.data.title = data.name;\n\t\t\t}\n\t\t}\n\n\t\t// Extract the file, if it exists from the data object\n\t\t// If the File is an INPUT element lets just concern ourselves with the NodeList\n\t\tvar file;\n\t\tif ('file' in p.data) {\n\t\t\tfile = p.data.file;\n\t\t\tdelete p.data.file;\n\n\t\t\tif (typeof (file) === 'object' && 'files' in file) {\n\t\t\t\t// Assign the NodeList\n\t\t\t\tfile = file.files;\n\t\t\t}\n\n\t\t\tif (!file || !file.length) {\n\t\t\t\tcallback({\n\t\t\t\t\terror: {\n\t\t\t\t\t\tcode: 'request_invalid',\n\t\t\t\t\t\tmessage: 'There were no files attached with this request to upload'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Set type p.data.mimeType = Object(file[0]).type || 'application/octet-stream';\n\n\t\t// Construct a multipart message\n\t\tvar parts = new Multipart();\n\t\tparts.append(JSON.stringify(p.data), 'application/json');\n\n\t\t// Read the file into a  base64 string... yep a hassle, i know\n\t\t// FormData doesn't let us assign our own Multipart headers and HTTP Content-Type\n\t\t// Alas GoogleApi need these in a particular format\n\t\tif (file) {\n\t\t\tparts.append(file);\n\t\t}\n\n\t\tparts.onready(function(body, boundary) {\n\n\t\t\tp.headers['content-type'] = 'multipart/related; boundary=\"' + boundary + '\"';\n\t\t\tp.data = body;\n\n\t\t\tcallback('upload/drive/v2/files' + (data.id ? '/' + data.id : '') + '?uploadType=multipart');\n\t\t});\n\n\t}\n\n\tfunction toJSON(p) {\n\t\tif (typeof (p.data) === 'object') {\n\t\t\t// Convert the POST into a javascript object\n\t\t\ttry {\n\t\t\t\tp.data = JSON.stringify(p.data);\n\t\t\t\tp.headers['content-type'] = 'application/json';\n\t\t\t}\n\t\t\tcatch (e) {}\n\t\t}\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\thello.init({\n\n\t\tinstagram: {\n\n\t\t\tname: 'Instagram',\n\n\t\t\toauth: {\n\t\t\t\t// See: http://instagram.com/developer/authentication/\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://instagram.com/oauth/authorize/',\n\t\t\t\tgrant: 'https://api.instagram.com/oauth/access_token'\n\t\t\t},\n\n\t\t\t// Refresh the access_token once expired\n\t\t\trefresh: true,\n\n\t\t\tscope: {\n\t\t\t\tbasic: 'basic',\n\t\t\t\tphotos: '',\n\t\t\t\tfriends: 'relationships',\n\t\t\t\tpublish: 'likes comments',\n\t\t\t\temail: '',\n\t\t\t\tshare: '',\n\t\t\t\tpublish_files: '',\n\t\t\t\tfiles: '',\n\t\t\t\tvideos: '',\n\t\t\t\toffline_access: ''\n\t\t\t},\n\n\t\t\tscope_delim: ' ',\n\n\t\t\tbase: 'https://api.instagram.com/v1/',\n\n\t\t\tget: {\n\t\t\t\tme: 'users/self',\n\t\t\t\t'me/feed': 'users/self/feed?count=@{limit|100}',\n\t\t\t\t'me/photos': 'users/self/media/recent?min_id=0&count=@{limit|100}',\n\t\t\t\t'me/friends': 'users/self/follows?count=@{limit|100}',\n\t\t\t\t'me/following': 'users/self/follows?count=@{limit|100}',\n\t\t\t\t'me/followers': 'users/self/followed-by?count=@{limit|100}',\n\t\t\t\t'friend/photos': 'users/@{id}/media/recent?min_id=0&count=@{limit|100}'\n\t\t\t},\n\n\t\t\tpost: {\n\t\t\t\t'me/like': function(p, callback) {\n\t\t\t\t\tvar id = p.data.id;\n\t\t\t\t\tp.data = {};\n\t\t\t\t\tcallback('media/' + id + '/likes');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdel: {\n\t\t\t\t'me/like': 'media/@{id}/likes'\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o) {\n\n\t\t\t\t\tformatError(o);\n\n\t\t\t\t\tif ('data' in o) {\n\t\t\t\t\t\to.id = o.data.id;\n\t\t\t\t\t\to.thumbnail = o.data.profile_picture;\n\t\t\t\t\t\to.name = o.data.full_name || o.data.username;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'me/friends': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\t\t\t\t'me/followers': formatFriends,\n\t\t\t\t'me/photos': function(o) {\n\n\t\t\t\t\tformatError(o);\n\t\t\t\t\tpaging(o);\n\n\t\t\t\t\tif ('data' in o) {\n\t\t\t\t\t\to.data = o.data.filter(function(d) {\n\t\t\t\t\t\t\treturn d.type === 'image';\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\to.data.forEach(function(d) {\n\t\t\t\t\t\t\td.name = d.caption ? d.caption.text : null;\n\t\t\t\t\t\t\td.thumbnail = d.images.thumbnail.url;\n\t\t\t\t\t\t\td.picture = d.images.standard_resolution.url;\n\t\t\t\t\t\t\td.pictures = Object.keys(d.images)\n\t\t\t\t\t\t\t\t.map(function(key) {\n\t\t\t\t\t\t\t\t\tvar image = d.images[key];\n\t\t\t\t\t\t\t\t\treturn formatImage(image);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.sort(function(a, b) {\n\t\t\t\t\t\t\t\t\treturn a.width - b.width;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'default': function(o) {\n\t\t\t\t\to = formatError(o);\n\t\t\t\t\tpaging(o);\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Instagram does not return any CORS Headers\n\t\t\t// So besides JSONP we're stuck with proxy\n\t\t\txhr: function(p, qs) {\n\n\t\t\t\tvar method = p.method;\n\t\t\t\tvar proxy = method !== 'get';\n\n\t\t\t\tif (proxy) {\n\n\t\t\t\t\tif ((method === 'post' || method === 'put') && p.query.access_token) {\n\t\t\t\t\t\tp.data.access_token = p.query.access_token;\n\t\t\t\t\t\tdelete p.query.access_token;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No access control headers\n\t\t\t\t\t// Use the proxy instead\n\t\t\t\t\tp.proxy = proxy;\n\t\t\t\t}\n\n\t\t\t\treturn proxy;\n\t\t\t},\n\n\t\t\t// No form\n\t\t\tform: false\n\t\t}\n\t});\n\n\tfunction formatImage(image) {\n\t\treturn {\n\t\t\tsource: image.url,\n\t\t\twidth: image.width,\n\t\t\theight: image.height\n\t\t};\n\t}\n\n\tfunction formatError(o) {\n\t\tif (typeof o === 'string') {\n\t\t\treturn {\n\t\t\t\terror: {\n\t\t\t\t\tcode: 'invalid_request',\n\t\t\t\t\tmessage: o\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (o && 'meta' in o && 'error_type' in o.meta) {\n\t\t\to.error = {\n\t\t\t\tcode: o.meta.error_type,\n\t\t\t\tmessage: o.meta.error_message\n\t\t\t};\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriends(o) {\n\t\tpaging(o);\n\t\tif (o && 'data' in o) {\n\t\t\to.data.forEach(formatFriend);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriend(o) {\n\t\tif (o.id) {\n\t\t\to.thumbnail = o.profile_picture;\n\t\t\to.name = o.full_name || o.username;\n\t\t}\n\t}\n\n\t// See: http://instagram.com/developer/endpoints/\n\tfunction paging(res) {\n\t\tif ('pagination' in res) {\n\t\t\tres.paging = {\n\t\t\t\tnext: res.pagination.next_url\n\t\t\t};\n\t\t\tdelete res.pagination;\n\t\t}\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\thello.init({\n\n\t\tjoinme: {\n\n\t\t\tname: 'join.me',\n\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://secure.join.me/api/public/v1/auth/oauth2',\n\t\t\t\tgrant: 'https://secure.join.me/api/public/v1/auth/oauth2'\n\t\t\t},\n\n\t\t\trefresh: false,\n\n\t\t\tscope: {\n\t\t\t\tbasic: 'user_info',\n\t\t\t\tuser: 'user_info',\n\t\t\t\tscheduler: 'scheduler',\n\t\t\t\tstart: 'start_meeting',\n\t\t\t\temail: '',\n\t\t\t\tfriends: '',\n\t\t\t\tshare: '',\n\t\t\t\tpublish: '',\n\t\t\t\tphotos: '',\n\t\t\t\tpublish_files: '',\n\t\t\t\tfiles: '',\n\t\t\t\tvideos: '',\n\t\t\t\toffline_access: ''\n\t\t\t},\n\n\t\t\tscope_delim: ' ',\n\n\t\t\tlogin: function(p) {\n\t\t\t\tp.options.popup.width = 400;\n\t\t\t\tp.options.popup.height = 700;\n\t\t\t},\n\n\t\t\tbase: 'https://api.join.me/v1/',\n\n\t\t\tget: {\n\t\t\t\tme: 'user',\n\t\t\t\tmeetings: 'meetings',\n\t\t\t\t'meetings/info': 'meetings/@{id}'\n\t\t\t},\n\n\t\t\tpost: {\n\t\t\t\t'meetings/start/adhoc': function(p, callback) {\n\t\t\t\t\tcallback('meetings/start');\n\t\t\t\t},\n\n\t\t\t\t'meetings/start/scheduled': function(p, callback) {\n\t\t\t\t\tvar meetingId = p.data.meetingId;\n\t\t\t\t\tp.data = {};\n\t\t\t\t\tcallback('meetings/' + meetingId + '/start');\n\t\t\t\t},\n\n\t\t\t\t'meetings/schedule': function(p, callback) {\n\t\t\t\t\tcallback('meetings');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpatch: {\n\t\t\t\t'meetings/update': function(p, callback) {\n\t\t\t\t\tcallback('meetings/' + p.data.meetingId);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdel: {\n\t\t\t\t'meetings/delete': 'meetings/@{id}'\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o, headers) {\n\t\t\t\t\tformatError(o, headers);\n\n\t\t\t\t\tif (!o.email) {\n\t\t\t\t\t\treturn o;\n\t\t\t\t\t}\n\n\t\t\t\t\to.name = o.fullName;\n\t\t\t\t\to.first_name = o.name.split(' ')[0];\n\t\t\t\t\to.last_name = o.name.split(' ')[1];\n\t\t\t\t\to.id = o.email;\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'default': function(o, headers) {\n\t\t\t\t\tformatError(o, headers);\n\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\txhr: formatRequest\n\n\t\t}\n\t});\n\n\tfunction formatError(o, headers) {\n\t\tvar errorCode;\n\t\tvar message;\n\t\tvar details;\n\n\t\tif (o && ('Message' in o)) {\n\t\t\tmessage = o.Message;\n\t\t\tdelete o.Message;\n\n\t\t\tif ('ErrorCode' in o) {\n\t\t\t\terrorCode = o.ErrorCode;\n\t\t\t\tdelete o.ErrorCode;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrorCode = getErrorCode(headers);\n\t\t\t}\n\n\t\t\to.error = {\n\t\t\t\tcode: errorCode,\n\t\t\t\tmessage: message,\n\t\t\t\tdetails: o\n\t\t\t};\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatRequest(p, qs) {\n\t\t// Move the access token from the request body to the request header\n\t\tvar token = qs.access_token;\n\t\tdelete qs.access_token;\n\t\tp.headers.Authorization = 'Bearer ' + token;\n\n\t\t// Format non-get requests to indicate json body\n\t\tif (p.method !== 'get' && p.data) {\n\t\t\tp.headers['Content-Type'] = 'application/json';\n\t\t\tif (typeof (p.data) === 'object') {\n\t\t\t\tp.data = JSON.stringify(p.data);\n\t\t\t}\n\t\t}\n\n\t\tif (p.method === 'put') {\n\t\t\tp.method = 'patch';\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction getErrorCode(headers) {\n\t\tswitch (headers.statusCode) {\n\t\t\tcase 400:\n\t\t\t\treturn 'invalid_request';\n\t\t\tcase 403:\n\t\t\t\treturn 'stale_token';\n\t\t\tcase 401:\n\t\t\t\treturn 'invalid_token';\n\t\t\tcase 500:\n\t\t\t\treturn 'server_error';\n\t\t\tdefault:\n\t\t\t\treturn 'server_error';\n\t\t}\n\t}\n\n}(hello));\n\n(function(hello) {\n\n\thello.init({\n\n\t\tlinkedin: {\n\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tresponse_type: 'code',\n\t\t\t\tauth: 'https://www.linkedin.com/uas/oauth2/authorization',\n\t\t\t\tgrant: 'https://www.linkedin.com/uas/oauth2/accessToken'\n\t\t\t},\n\n\t\t\t// Refresh the access_token once expired\n\t\t\trefresh: true,\n\n\t\t\tscope: {\n\t\t\t\tbasic: 'r_basicprofile',\n\t\t\t\temail: 'r_emailaddress',\n\t\t\t\tfiles: '',\n\t\t\t\tfriends: '',\n\t\t\t\tphotos: '',\n\t\t\t\tpublish: 'w_share',\n\t\t\t\tpublish_files: 'w_share',\n\t\t\t\tshare: '',\n\t\t\t\tvideos: '',\n\t\t\t\toffline_access: ''\n\t\t\t},\n\t\t\tscope_delim: ' ',\n\n\t\t\tbase: 'https://api.linkedin.com/v1/',\n\n\t\t\tget: {\n\t\t\t\tme: 'people/~:(picture-url,first-name,last-name,id,formatted-name,email-address)',\n\n\t\t\t\t// See: http://developer.linkedin.com/documents/get-network-updates-and-statistics-api\n\t\t\t\t'me/share': 'people/~/network/updates?count=@{limit|250}'\n\t\t\t},\n\n\t\t\tpost: {\n\n\t\t\t\t// See: https://developer.linkedin.com/documents/api-requests-json\n\t\t\t\t'me/share': function(p, callback) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tvisibility: {\n\t\t\t\t\t\t\tcode: 'anyone'\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (p.data.id) {\n\n\t\t\t\t\t\tdata.attribution = {\n\t\t\t\t\t\t\tshare: {\n\t\t\t\t\t\t\t\tid: p.data.id\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdata.comment = p.data.message;\n\t\t\t\t\t\tif (p.data.picture && p.data.link) {\n\t\t\t\t\t\t\tdata.content = {\n\t\t\t\t\t\t\t\t'submitted-url': p.data.link,\n\t\t\t\t\t\t\t\t'submitted-image-url': p.data.picture\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tp.data = JSON.stringify(data);\n\n\t\t\t\t\tcallback('people/~/shares?format=json');\n\t\t\t\t},\n\n\t\t\t\t'me/like': like\n\t\t\t},\n\n\t\t\tdel:{\n\t\t\t\t'me/like': like\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\tformatUser(o);\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'me/friends': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\t\t\t\t'me/followers': formatFriends,\n\t\t\t\t'me/share': function(o) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\tpaging(o);\n\t\t\t\t\tif (o.values) {\n\t\t\t\t\t\to.data = o.values.map(formatUser);\n\t\t\t\t\t\to.data.forEach(function(item) {\n\t\t\t\t\t\t\titem.message = item.headline;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdelete o.values;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'default': function(o, headers) {\n\t\t\t\t\tformatError(o);\n\t\t\t\t\tempty(o, headers);\n\t\t\t\t\tpaging(o);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tjsonp: function(p, qs) {\n\t\t\t\tformatQuery(qs);\n\t\t\t\tif (p.method === 'get') {\n\t\t\t\t\tqs.format = 'jsonp';\n\t\t\t\t\tqs['error-callback'] = p.callbackID;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\txhr: function(p, qs) {\n\t\t\t\tif (p.method !== 'get') {\n\t\t\t\t\tformatQuery(qs);\n\t\t\t\t\tp.headers['Content-Type'] = 'application/json';\n\n\t\t\t\t\t// Note: x-li-format ensures error responses are not returned in XML\n\t\t\t\t\tp.headers['x-li-format'] = 'json';\n\t\t\t\t\tp.proxy = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction formatError(o) {\n\t\tif (o && 'errorCode' in o) {\n\t\t\to.error = {\n\t\t\t\tcode: o.status,\n\t\t\t\tmessage: o.message\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction formatUser(o) {\n\t\tif (o.error) {\n\t\t\treturn;\n\t\t}\n\n\t\to.first_name = o.firstName;\n\t\to.last_name = o.lastName;\n\t\to.name = o.formattedName || (o.first_name + ' ' + o.last_name);\n\t\to.thumbnail = o.pictureUrl;\n\t\to.email = o.emailAddress;\n\t\treturn o;\n\t}\n\n\tfunction formatFriends(o) {\n\t\tformatError(o);\n\t\tpaging(o);\n\t\tif (o.values) {\n\t\t\to.data = o.values.map(formatUser);\n\t\t\tdelete o.values;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction paging(res) {\n\t\tif ('_count' in res && '_start' in res && (res._count + res._start) < res._total) {\n\t\t\tres.paging = {\n\t\t\t\tnext: '?start=' + (res._start + res._count) + '&count=' + res._count\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction empty(o, headers) {\n\t\tif (JSON.stringify(o) === '{}' && headers.statusCode === 200) {\n\t\t\to.success = true;\n\t\t}\n\t}\n\n\tfunction formatQuery(qs) {\n\t\t// LinkedIn signs requests with the parameter 'oauth2_access_token'\n\t\t// ... yeah another one who thinks they should be different!\n\t\tif (qs.access_token) {\n\t\t\tqs.oauth2_access_token = qs.access_token;\n\t\t\tdelete qs.access_token;\n\t\t}\n\t}\n\n\tfunction like(p, callback) {\n\t\tp.headers['x-li-format'] = 'json';\n\t\tvar id = p.data.id;\n\t\tp.data = (p.method !== 'delete').toString();\n\t\tp.method = 'put';\n\t\tcallback('people/~/network/updates/key=' + id + '/is-liked');\n\t}\n\n})(hello);\n\n// See: https://developers.soundcloud.com/docs/api/reference\n(function(hello) {\n\n\thello.init({\n\n\t\tsoundcloud: {\n\t\t\tname: 'SoundCloud',\n\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://soundcloud.com/connect',\n\t\t\t\tgrant: 'https://soundcloud.com/oauth2/token'\n\t\t\t},\n\n\t\t\t// Request path translated\n\t\t\tbase: 'https://api.soundcloud.com/',\n\t\t\tget: {\n\t\t\t\tme: 'me.json',\n\n\t\t\t\t// Http://developers.soundcloud.com/docs/api/reference#me\n\t\t\t\t'me/friends': 'me/followings.json',\n\t\t\t\t'me/followers': 'me/followers.json',\n\t\t\t\t'me/following': 'me/followings.json',\n\n\t\t\t\t// See: http://developers.soundcloud.com/docs/api/reference#activities\n\t\t\t\t'default': function(p, callback) {\n\n\t\t\t\t\t// Include '.json at the end of each request'\n\t\t\t\t\tcallback(p.path + '.json');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Response handlers\n\t\t\twrap: {\n\t\t\t\tme: function(o) {\n\t\t\t\t\tformatUser(o);\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\n\t\t\t\t'default': function(o) {\n\t\t\t\t\tif (Array.isArray(o)) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\tdata: o.map(formatUser)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tpaging(o);\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\txhr: formatRequest,\n\t\t\tjsonp: formatRequest\n\t\t}\n\t});\n\n\tfunction formatRequest(p, qs) {\n\t\t// Alter the querystring\n\t\tvar token = qs.access_token;\n\t\tdelete qs.access_token;\n\t\tqs.oauth_token = token;\n\t\tqs['_status_code_map[302]'] = 200;\n\t\treturn true;\n\t}\n\n\tfunction formatUser(o) {\n\t\tif (o.id) {\n\t\t\to.picture = o.avatar_url;\n\t\t\to.thumbnail = o.avatar_url;\n\t\t\to.name = o.username || o.full_name;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\t// See: http://developers.soundcloud.com/docs/api/reference#activities\n\tfunction paging(res) {\n\t\tif ('next_href' in res) {\n\t\t\tres.paging = {\n\t\t\t\tnext: res.next_href\n\t\t\t};\n\t\t}\n\t}\n\n})(hello);\n\n// See: https://developer.spotify.com/web-api/\n(function(hello) {\n\n\thello.init({\n\n\t\tspotify: {\n\t\t\tname: 'Spotify',\n\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://accounts.spotify.com/authorize',\n\t\t\t\tgrant: 'https://accounts.spotify.com/api/token'\n\t\t\t},\n\n\t\t\t// See: https://developer.spotify.com/web-api/using-scopes/\n\t\t\tscope_delim: ' ',\n\t\t\tscope: {\n\t\t\t\tbasic: '',\n\t\t\t\tphotos: '',\n\t\t\t\tfriends: 'user-follow-read',\n\t\t\t\tpublish: 'user-library-read',\n\t\t\t\temail: 'user-read-email',\n\t\t\t\tshare: '',\n\t\t\t\tpublish_files: '',\n\t\t\t\tfiles: '',\n\t\t\t\tvideos: '',\n\t\t\t\toffline_access: ''\n\t\t\t},\n\n\t\t\t// Request path translated\n\t\t\tbase: 'https://api.spotify.com',\n\n\t\t\t// See: https://developer.spotify.com/web-api/endpoint-reference/\n\t\t\tget: {\n\t\t\t\tme: '/v1/me',\n\t\t\t\t'me/following': '/v1/me/following?type=artist', // Only 'artist' is supported\n\n\t\t\t\t// Because tracks, albums and playlist exist on spotify, the tracks are considered\n\t\t\t\t// the resource for the 'me/likes' endpoint\n\t\t\t\t'me/like': '/v1/me/tracks'\n\t\t\t},\n\n\t\t\t// Response handlers\n\t\t\twrap: {\n\t\t\t\tme: formatUser,\n\t\t\t\t'me/following': formatFollowees,\n\t\t\t\t'me/like': formatTracks\n\t\t\t},\n\n\t\t\txhr: formatRequest,\n\t\t\tjsonp: false\n\t\t}\n\t});\n\n\t// Move the access token from the request body to the request header\n\tfunction formatRequest(p, qs) {\n\t\tvar token = qs.access_token;\n\t\tdelete qs.access_token;\n\t\tp.headers.Authorization = 'Bearer ' + token;\n\n\t\treturn true;\n\t}\n\n\tfunction formatUser(o) {\n\t\tif (o.id) {\n\t\t\to.name = o.display_name;\n\t\t\to.thumbnail = o.images.length ? o.images[0].url : null;\n\t\t\to.picture = o.thumbnail;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFollowees(o) {\n\t\tpaging(o);\n\t\tif (o && 'artists' in o) {\n\t\t\to.data = o.artists.items.forEach(formatUser);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatTracks(o) {\n\t\tpaging(o);\n\t\to.data = o.items;\n\n\t\treturn o;\n\t}\n\n\tfunction paging(res) {\n\t\tif (res && 'next' in res) {\n\t\t\tres.paging = {\n\t\t\t\tnext: res.next\n\t\t\t};\n\t\t\tdelete res.next;\n\t\t}\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\tvar base = 'https://api.twitter.com/';\n\n\thello.init({\n\n\t\ttwitter: {\n\n\t\t\t// Ensure that you define an oauth_proxy\n\t\t\toauth: {\n\t\t\t\tversion: '1.0a',\n\t\t\t\tauth: base + 'oauth/authenticate',\n\t\t\t\trequest: base + 'oauth/request_token',\n\t\t\t\ttoken: base + 'oauth/access_token'\n\t\t\t},\n\n\t\t\tlogin: function(p) {\n\t\t\t\t// Reauthenticate\n\t\t\t\t// https://dev.twitter.com/oauth/reference/get/oauth/authenticate\n\t\t\t\tvar prefix = '?force_login=true';\n\t\t\t\tthis.oauth.auth = this.oauth.auth.replace(prefix, '') + (p.options.force ? prefix : '');\n\t\t\t},\n\n\t\t\tbase: base + '1.1/',\n\n\t\t\tget: {\n\t\t\t\tme: 'account/verify_credentials.json',\n\t\t\t\t'me/friends': 'friends/list.json?count=@{limit|200}',\n\t\t\t\t'me/following': 'friends/list.json?count=@{limit|200}',\n\t\t\t\t'me/followers': 'followers/list.json?count=@{limit|200}',\n\n\t\t\t\t// Https://dev.twitter.com/docs/api/1.1/get/statuses/user_timeline\n\t\t\t\t'me/share': 'statuses/user_timeline.json?count=@{limit|200}',\n\n\t\t\t\t// Https://dev.twitter.com/rest/reference/get/favorites/list\n\t\t\t\t'me/like': 'favorites/list.json?count=@{limit|200}'\n\t\t\t},\n\n\t\t\tpost: {\n\t\t\t\t'me/share': function(p, callback) {\n\n\t\t\t\t\tvar data = p.data;\n\t\t\t\t\tp.data = null;\n\n\t\t\t\t\tvar status = [];\n\n\t\t\t\t\t// Change message to status\n\t\t\t\t\tif (data.message) {\n\t\t\t\t\t\tstatus.push(data.message);\n\t\t\t\t\t\tdelete data.message;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If link is given\n\t\t\t\t\tif (data.link) {\n\t\t\t\t\t\tstatus.push(data.link);\n\t\t\t\t\t\tdelete data.link;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.picture) {\n\t\t\t\t\t\tstatus.push(data.picture);\n\t\t\t\t\t\tdelete data.picture;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Compound all the components\n\t\t\t\t\tif (status.length) {\n\t\t\t\t\t\tdata.status = status.join(' ');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Tweet media\n\t\t\t\t\tif (data.file) {\n\t\t\t\t\t\tdata['media[]'] = data.file;\n\t\t\t\t\t\tdelete data.file;\n\t\t\t\t\t\tp.data = data;\n\t\t\t\t\t\tcallback('statuses/update_with_media.json');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Retweet?\n\t\t\t\t\telse if ('id' in data) {\n\t\t\t\t\t\tcallback('statuses/retweet/' + data.id + '.json');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Tweet\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Assign the post body to the query parameters\n\t\t\t\t\t\thello.utils.extend(p.query, data);\n\t\t\t\t\t\tcallback('statuses/update.json?include_entities=1');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// See: https://dev.twitter.com/rest/reference/post/favorites/create\n\t\t\t\t'me/like': function(p, callback) {\n\t\t\t\t\tvar id = p.data.id;\n\t\t\t\t\tp.data = null;\n\t\t\t\t\tcallback('favorites/create.json?id=' + id);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdel: {\n\n\t\t\t\t// See: https://dev.twitter.com/rest/reference/post/favorites/destroy\n\t\t\t\t'me/like': function() {\n\t\t\t\t\tp.method = 'post';\n\t\t\t\t\tvar id = p.data.id;\n\t\t\t\t\tp.data = null;\n\t\t\t\t\tcallback('favorites/destroy.json?id=' + id);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(res) {\n\t\t\t\t\tformatError(res);\n\t\t\t\t\tformatUser(res);\n\t\t\t\t\treturn res;\n\t\t\t\t},\n\n\t\t\t\t'me/friends': formatFriends,\n\t\t\t\t'me/followers': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\n\t\t\t\t'me/share': function(res) {\n\t\t\t\t\tformatError(res);\n\t\t\t\t\tpaging(res);\n\t\t\t\t\tif (!res.error && 'length' in res) {\n\t\t\t\t\t\treturn {data: res};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn res;\n\t\t\t\t},\n\n\t\t\t\t'default': function(res) {\n\t\t\t\t\tres = arrayToDataResponse(res);\n\t\t\t\t\tpaging(res);\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t},\n\t\t\txhr: function(p) {\n\n\t\t\t\t// Rely on the proxy for non-GET requests.\n\t\t\t\treturn (p.method !== 'get');\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction formatUser(o) {\n\t\tif (o.id) {\n\t\t\tif (o.name) {\n\t\t\t\tvar m = o.name.split(' ');\n\t\t\t\to.first_name = m.shift();\n\t\t\t\to.last_name = m.join(' ');\n\t\t\t}\n\n\t\t\t// See: https://dev.twitter.com/overview/general/user-profile-images-and-banners\n\t\t\to.thumbnail = o.profile_image_url_https || o.profile_image_url;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriends(o) {\n\t\tformatError(o);\n\t\tpaging(o);\n\t\tif (o.users) {\n\t\t\to.data = o.users.map(formatUser);\n\t\t\tdelete o.users;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatError(o) {\n\t\tif (o.errors) {\n\t\t\tvar e = o.errors[0];\n\t\t\to.error = {\n\t\t\t\tcode: 'request_failed',\n\t\t\t\tmessage: e.message\n\t\t\t};\n\t\t}\n\t}\n\n\t// Take a cursor and add it to the path\n\tfunction paging(res) {\n\t\t// Does the response include a 'next_cursor_string'\n\t\tif ('next_cursor_str' in res) {\n\t\t\t// See: https://dev.twitter.com/docs/misc/cursoring\n\t\t\tres.paging = {\n\t\t\t\tnext: '?cursor=' + res.next_cursor_str\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction arrayToDataResponse(res) {\n\t\treturn Array.isArray(res) ? {data: res} : res;\n\t}\n\n\t/**\n\t// The documentation says to define user in the request\n\t// Although its not actually required.\n\n\tvar user_id;\n\n\tfunction withUserId(callback){\n\t\tif(user_id){\n\t\t\tcallback(user_id);\n\t\t}\n\t\telse{\n\t\t\thello.api('twitter:/me', function(o){\n\t\t\t\tuser_id = o.id;\n\t\t\t\tcallback(o.id);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction sign(url){\n\t\treturn function(p, callback){\n\t\t\twithUserId(function(user_id){\n\t\t\t\tcallback(url+'?user_id='+user_id);\n\t\t\t});\n\t\t};\n\t}\n\t*/\n\n})(hello);\n\n// Vkontakte (vk.com)\n(function(hello) {\n\n\thello.init({\n\n\t\tvk: {\n\t\t\tname: 'Vk',\n\n\t\t\t// See https://vk.com/dev/oauth_dialog\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://oauth.vk.com/authorize',\n\t\t\t\tgrant: 'https://oauth.vk.com/access_token'\n\t\t\t},\n\n\t\t\t// Authorization scopes\n\t\t\t// See https://vk.com/dev/permissions\n\t\t\tscope: {\n\t\t\t\temail: 'email',\n\t\t\t\tfriends: 'friends',\n\t\t\t\tphotos: 'photos',\n\t\t\t\tvideos: 'video',\n\t\t\t\tshare: 'share',\n\t\t\t\toffline_access: 'offline'\n\t\t\t},\n\n\t\t\t// Refresh the access_token\n\t\t\trefresh: true,\n\n\t\t\tlogin: function(p) {\n\t\t\t\tp.qs.display = window.navigator &&\n\t\t\t\t\twindow.navigator.userAgent &&\n\t\t\t\t\t/ipad|phone|phone|android/.test(window.navigator.userAgent.toLowerCase()) ? 'mobile' : 'popup';\n\t\t\t},\n\n\t\t\t// API Base URL\n\t\t\tbase: 'https://api.vk.com/method/',\n\n\t\t\t// Map GET requests\n\t\t\tget: {\n\t\t\t\tme: function(p, callback) {\n\t\t\t\t\tp.query.fields = 'id,first_name,last_name,photo_max';\n\t\t\t\t\tcallback('users.get');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: function(res, headers, req) {\n\t\t\t\t\tformatError(res);\n\t\t\t\t\treturn formatUser(res, req);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// No XHR\n\t\t\txhr: false,\n\n\t\t\t// All requests should be JSONP as of missing CORS headers in https://api.vk.com/method/*\n\t\t\tjsonp: true,\n\n\t\t\t// No form\n\t\t\tform: false\n\t\t}\n\t});\n\n\tfunction formatUser(o, req) {\n\n\t\tif (o !== null && 'response' in o && o.response !== null && o.response.length) {\n\t\t\to = o.response[0];\n\t\t\to.id = o.uid;\n\t\t\to.thumbnail = o.picture = o.photo_max;\n\t\t\to.name = o.first_name + ' ' + o.last_name;\n\n\t\t\tif (req.authResponse && req.authResponse.email !== null)\n\t\t\t\to.email = req.authResponse.email;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatError(o) {\n\n\t\tif (o.error) {\n\t\t\tvar e = o.error;\n\t\t\to.error = {\n\t\t\t\tcode: e.error_code,\n\t\t\t\tmessage: e.error_msg\n\t\t\t};\n\t\t}\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\thello.init({\n\t\twindows: {\n\t\t\tname: 'Windows live',\n\n\t\t\t// REF: http://msdn.microsoft.com/en-us/library/hh243641.aspx\n\t\t\toauth: {\n\t\t\t\tversion: 2,\n\t\t\t\tauth: 'https://login.live.com/oauth20_authorize.srf',\n\t\t\t\tgrant: 'https://login.live.com/oauth20_token.srf'\n\t\t\t},\n\n\t\t\t// Refresh the access_token once expired\n\t\t\trefresh: true,\n\n\t\t\tlogout: function() {\n\t\t\t\treturn 'http://login.live.com/oauth20_logout.srf?ts=' + (new Date()).getTime();\n\t\t\t},\n\n\t\t\t// Authorization scopes\n\t\t\tscope: {\n\t\t\t\tbasic: 'wl.signin,wl.basic',\n\t\t\t\temail: 'wl.emails',\n\t\t\t\tbirthday: 'wl.birthday',\n\t\t\t\tevents: 'wl.calendars',\n\t\t\t\tphotos: 'wl.photos',\n\t\t\t\tvideos: 'wl.photos',\n\t\t\t\tfriends: 'wl.contacts_emails',\n\t\t\t\tfiles: 'wl.skydrive',\n\t\t\t\tpublish: 'wl.share',\n\t\t\t\tpublish_files: 'wl.skydrive_update',\n\t\t\t\tshare: 'wl.share',\n\t\t\t\tcreate_event: 'wl.calendars_update,wl.events_create',\n\t\t\t\toffline_access: 'wl.offline_access'\n\t\t\t},\n\n\t\t\t// API base URL\n\t\t\tbase: 'https://apis.live.net/v5.0/',\n\n\t\t\t// Map GET requests\n\t\t\tget: {\n\n\t\t\t\t// Friends\n\t\t\t\tme: 'me',\n\t\t\t\t'me/friends': 'me/friends',\n\t\t\t\t'me/following': 'me/contacts',\n\t\t\t\t'me/followers': 'me/friends',\n\t\t\t\t'me/contacts': 'me/contacts',\n\n\t\t\t\t'me/albums': 'me/albums',\n\n\t\t\t\t// Include the data[id] in the path\n\t\t\t\t'me/album': '@{id}/files',\n\t\t\t\t'me/photo': '@{id}',\n\n\t\t\t\t// Files\n\t\t\t\t'me/files': '@{parent|me/skydrive}/files',\n\t\t\t\t'me/folders': '@{id|me/skydrive}/files',\n\t\t\t\t'me/folder': '@{id|me/skydrive}/files'\n\t\t\t},\n\n\t\t\t// Map POST requests\n\t\t\tpost: {\n\t\t\t\t'me/albums': 'me/albums',\n\t\t\t\t'me/album': '@{id}/files/',\n\n\t\t\t\t'me/folders': '@{id|me/skydrive/}',\n\t\t\t\t'me/files': '@{parent|me/skydrive}/files'\n\t\t\t},\n\n\t\t\t// Map DELETE requests\n\t\t\tdel: {\n\t\t\t\t// Include the data[id] in the path\n\t\t\t\t'me/album': '@{id}',\n\t\t\t\t'me/photo': '@{id}',\n\t\t\t\t'me/folder': '@{id}',\n\t\t\t\t'me/files': '@{id}'\n\t\t\t},\n\n\t\t\twrap: {\n\t\t\t\tme: formatUser,\n\n\t\t\t\t'me/friends': formatFriends,\n\t\t\t\t'me/contacts': formatFriends,\n\t\t\t\t'me/followers': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\t\t\t\t'me/albums': formatAlbums,\n\t\t\t\t'me/photos': formatDefault,\n\t\t\t\t'default': formatDefault\n\t\t\t},\n\n\t\t\txhr: function(p) {\n\t\t\t\tif (p.method !== 'get' && p.method !== 'delete' && !hello.utils.hasBinary(p.data)) {\n\n\t\t\t\t\t// Does this have a data-uri to upload as a file?\n\t\t\t\t\tif (typeof (p.data.file) === 'string') {\n\t\t\t\t\t\tp.data.file = hello.utils.toBlob(p.data.file);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp.data = JSON.stringify(p.data);\n\t\t\t\t\t\tp.headers = {\n\t\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tjsonp: function(p) {\n\t\t\t\tif (p.method !== 'get' && !hello.utils.hasBinary(p.data)) {\n\t\t\t\t\tp.data.method = p.method;\n\t\t\t\t\tp.method = 'get';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction formatDefault(o) {\n\t\tif ('data' in o) {\n\t\t\to.data.forEach(function(d) {\n\t\t\t\tif (d.picture) {\n\t\t\t\t\td.thumbnail = d.picture;\n\t\t\t\t}\n\n\t\t\t\tif (d.images) {\n\t\t\t\t\td.pictures = d.images\n\t\t\t\t\t\t.map(formatImage)\n\t\t\t\t\t\t.sort(function(a, b) {\n\t\t\t\t\t\t\treturn a.width - b.width;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatImage(image) {\n\t\treturn {\n\t\t\twidth: image.width,\n\t\t\theight: image.height,\n\t\t\tsource: image.source\n\t\t};\n\t}\n\n\tfunction formatAlbums(o) {\n\t\tif ('data' in o) {\n\t\t\to.data.forEach(function(d) {\n\t\t\t\td.photos = d.files = 'https://apis.live.net/v5.0/' + d.id + '/photos';\n\t\t\t});\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatUser(o, headers, req) {\n\t\tif (o.id) {\n\t\t\tvar token = req.query.access_token;\n\t\t\tif (o.emails) {\n\t\t\t\to.email = o.emails.preferred;\n\t\t\t}\n\n\t\t\t// If this is not an non-network friend\n\t\t\tif (o.is_friend !== false) {\n\t\t\t\t// Use the id of the user_id if available\n\t\t\t\tvar id = (o.user_id || o.id);\n\t\t\t\to.thumbnail = o.picture = 'https://apis.live.net/v5.0/' + id + '/picture?access_token=' + token;\n\t\t\t}\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriends(o, headers, req) {\n\t\tif ('data' in o) {\n\t\t\to.data.forEach(function(d) {\n\t\t\t\tformatUser(d, headers, req);\n\t\t\t});\n\t\t}\n\n\t\treturn o;\n\t}\n\n})(hello);\n\n(function(hello) {\n\n\thello.init({\n\n\t\tyahoo: {\n\n\t\t\t// Ensure that you define an oauth_proxy\n\t\t\toauth: {\n\t\t\t\tversion: '1.0a',\n\t\t\t\tauth: 'https://api.login.yahoo.com/oauth/v2/request_auth',\n\t\t\t\trequest: 'https://api.login.yahoo.com/oauth/v2/get_request_token',\n\t\t\t\ttoken: 'https://api.login.yahoo.com/oauth/v2/get_token'\n\t\t\t},\n\n\t\t\t// Login handler\n\t\t\tlogin: function(p) {\n\t\t\t\t// Change the default popup window to be at least 560\n\t\t\t\t// Yahoo does dynamically change it on the fly for the signin screen (only, what if your already signed in)\n\t\t\t\tp.options.popup.width = 560;\n\n\t\t\t\t// Yahoo throws an parameter error if for whatever reason the state.scope contains a comma, so lets remove scope\n\t\t\t\ttry {delete p.qs.state.scope;}\n\t\t\t\tcatch (e) {}\n\t\t\t},\n\n\t\t\tbase: 'https://social.yahooapis.com/v1/',\n\n\t\t\tget: {\n\t\t\t\tme: yql('select * from social.profile(0) where guid=me'),\n\t\t\t\t'me/friends': yql('select * from social.contacts(0) where guid=me'),\n\t\t\t\t'me/following': yql('select * from social.contacts(0) where guid=me')\n\t\t\t},\n\t\t\twrap: {\n\t\t\t\tme: formatUser,\n\n\t\t\t\t// Can't get IDs\n\t\t\t\t// It might be better to loop through the social.relationship table with has unique IDs of users.\n\t\t\t\t'me/friends': formatFriends,\n\t\t\t\t'me/following': formatFriends,\n\t\t\t\t'default': paging\n\t\t\t}\n\t\t}\n\t});\n\n\t/*\n\t\t// Auto-refresh fix: bug in Yahoo can't get this to work with node-oauth-shim\n\t\tlogin : function(o){\n\t\t\t// Is the user already logged in\n\t\t\tvar auth = hello('yahoo').getAuthResponse();\n\n\t\t\t// Is this a refresh token?\n\t\t\tif(o.options.display==='none'&&auth&&auth.access_token&&auth.refresh_token){\n\t\t\t\t// Add the old token and the refresh token, including path to the query\n\t\t\t\t// See http://developer.yahoo.com/oauth/guide/oauth-refreshaccesstoken.html\n\t\t\t\to.qs.access_token = auth.access_token;\n\t\t\t\to.qs.refresh_token = auth.refresh_token;\n\t\t\t\to.qs.token_url = 'https://api.login.yahoo.com/oauth/v2/get_token';\n\t\t\t}\n\t\t},\n\t*/\n\n\tfunction formatError(o) {\n\t\tif (o && 'meta' in o && 'error_type' in o.meta) {\n\t\t\to.error = {\n\t\t\t\tcode: o.meta.error_type,\n\t\t\t\tmessage: o.meta.error_message\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction formatUser(o) {\n\n\t\tformatError(o);\n\t\tif (o.query && o.query.results && o.query.results.profile) {\n\t\t\to = o.query.results.profile;\n\t\t\to.id = o.guid;\n\t\t\to.last_name = o.familyName;\n\t\t\to.first_name = o.givenName || o.nickname;\n\t\t\tvar a = [];\n\t\t\tif (o.first_name) {\n\t\t\t\ta.push(o.first_name);\n\t\t\t}\n\n\t\t\tif (o.last_name) {\n\t\t\t\ta.push(o.last_name);\n\t\t\t}\n\n\t\t\to.name = a.join(' ');\n\t\t\to.email = (o.emails && o.emails[0]) ? o.emails[0].handle : null;\n\t\t\to.thumbnail = o.image ? o.image.imageUrl : null;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriends(o, headers, request) {\n\t\tformatError(o);\n\t\tpaging(o, headers, request);\n\t\tvar contact;\n\t\tvar field;\n\t\tif (o.query && o.query.results && o.query.results.contact) {\n\t\t\to.data = o.query.results.contact;\n\t\t\tdelete o.query;\n\n\t\t\tif (!Array.isArray(o.data)) {\n\t\t\t\to.data = [o.data];\n\t\t\t}\n\n\t\t\to.data.forEach(formatFriend);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction formatFriend(contact) {\n\t\tcontact.id = null;\n\n\t\t// #362: Reports of responses returning a single item, rather than an Array of items.\n\t\t// Format the contact.fields to be an array.\n\t\tif (contact.fields && !(contact.fields instanceof Array)) {\n\t\t\tcontact.fields = [contact.fields];\n\t\t}\n\n\t\t(contact.fields || []).forEach(function(field) {\n\t\t\tif (field.type === 'email') {\n\t\t\t\tcontact.email = field.value;\n\t\t\t}\n\n\t\t\tif (field.type === 'name') {\n\t\t\t\tcontact.first_name = field.value.givenName;\n\t\t\t\tcontact.last_name = field.value.familyName;\n\t\t\t\tcontact.name = field.value.givenName + ' ' + field.value.familyName;\n\t\t\t}\n\n\t\t\tif (field.type === 'yahooid') {\n\t\t\t\tcontact.id = field.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction paging(res, headers, request) {\n\n\t\t// See: http://developer.yahoo.com/yql/guide/paging.html#local_limits\n\t\tif (res.query && res.query.count && request.options) {\n\t\t\tres.paging = {\n\t\t\t\tnext: '?start=' + (res.query.count + (+request.options.start || 1))\n\t\t\t};\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tfunction yql(q) {\n\t\treturn 'https://query.yahooapis.com/v1/yql?q=' + (q + ' limit @{limit|100} offset @{start|0}').replace(/\\s/g, '%20') + '&format=json';\n\t}\n\n})(hello);\n\n// Register as anonymous AMD module\nif (true) {\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn hello;\n\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n// CommonJS module for browserify\nif (typeof module === 'object' && module.exports) {\n\tmodule.exports = hello;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(5).setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n" );

/***/ }),

	/***/ 118:
	/***/ (function ( module, exports, __webpack_require__ )
	{

		module.exports = __webpack_require__( 119 );

		/***/
	}),

	/***/ 119:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
		eval( "Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hellojs_dist_hello_all__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hellojs_dist_hello_all___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_hellojs_dist_hello_all__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIxMTkuanMiLCJzb3VyY2VzQ29udGVudCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///119\n" );

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

	/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

		eval( "/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(9);\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcz9kN2FkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNjb3BlID0gKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsKSB8fFxuICAgICAgICAgICAgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYpIHx8XG4gICAgICAgICAgICB3aW5kb3c7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG5cbi8vIERPTSBBUElzLCBmb3IgY29tcGxldGVuZXNzXG5cbmV4cG9ydHMuc2V0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRUaW1lb3V0LCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbChzY29wZSwgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIHNldGltbWVkaWF0ZSBhdHRhY2hlcyBpdHNlbGYgdG8gdGhlIGdsb2JhbCBvYmplY3RcbnJlcXVpcmUoXCJzZXRpbW1lZGlhdGVcIik7XG4vLyBPbiBzb21lIGV4b3RpYyBlbnZpcm9ubWVudHMsIGl0J3Mgbm90IGNsZWFyIHdoaWNoIG9iamVjdCBgc2V0aW1tZWRpYXRlYCB3YXNcbi8vIGFibGUgdG8gaW5zdGFsbCBvbnRvLiAgU2VhcmNoIGVhY2ggcG9zc2liaWxpdHkgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlXG4vLyBgc2V0aW1tZWRpYXRlYCBsaWJyYXJ5LlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuc2V0SW1tZWRpYXRlKTtcbmV4cG9ydHMuY2xlYXJJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5jbGVhckltbWVkaWF0ZSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n" );

/***/ }),

	/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

		eval( "/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(3)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n" );

/***/ })

/******/ });